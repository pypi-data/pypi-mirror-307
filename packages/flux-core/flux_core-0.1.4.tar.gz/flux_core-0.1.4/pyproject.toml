[tool.poetry]
name = "flux-core"
version = "0.1.4"
description = "Flux is a distributed workflow orchestration engine to build stateful and fault-tolerant workflows."
authors = ["Eduardo Dias <edurdias@gmail.com>"]
repository = "https://github.com/edurdias/flux"
homepage = "https://github.com/edurdias/flux"
readme = "README.md"

packages = [{ include = "flux" }]

[tool.poetry.dependencies]
python = "^3.12"
pydantic = "^2.9.2"
sqlalchemy = "^2.0.35"
fastapi = "^0.115.2"
uvicorn = "^0.31.1"
pycryptodome = "^3.21.0"
tomli = "^2.0.2"
pydantic-settings = "^2.6.1"

[tool.poetry.group.dev.dependencies]
httpx = "^0.27.2"
pandas = "^2.2.3"
numpy = "^2.1.1"
pyright = "^1.1.384"
pylint = "^3.3.1"
bandit = "^1.7.10"
pyflakes = "^3.2.0"
radon = "^6.0.1"
prospector = "^1.12.0"
pytest = "^8.3.3"
pytest-mock = "^3.14.0"
pytest-cov = "^5.0.0"
pre-commit = "^4.0.1"
mkdocs = "^1.6.1"
mkdocs-material = "^9.5.43"
mkdocs-material-extensions = "^1.3.1"
mkdocstrings = "^0.26.2"
ipykernel = "^6.29.5"

[tool.poetry.scripts]
flux = "flux.flux:cli"

[tool.pytest.ini_options]
filterwarnings = ["ignore::pytest.PytestReturnNotNoneWarning"]

[tool.ruff]
line-length = 100

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.flux]
debug = false      # Enable debug mode for additional logging
log_level = "INFO" # Logging level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
api_port = 8000    # Port for the FastAPI server

[tool.flux.catalog]
type = "sqlite" # Catalog type (module, sqlite)

[tool.flux.local_storage]
base_path = ".data/storage" # Base path for storing workflow outputs
serializer = "pkl"          # Default serializer (json or pkl)

[tool.flux.database_sqlite]
path = ".data" # Path for SQLite database files

[tool.flux.executor]
max_workers = 4      # Maximum number of concurrent worker threads
default_timeout = 30 # Default timeout for tasks in seconds
retry_attempts = 0   # Default number of retry attempts for failed tasks
retry_delay = 1      # Initial delay between retries in seconds
retry_backoff = 2    # Multiplier for subsequent retry delays

[tool.flux.security]
encryption_key = "SUPER_SECRET_KEY" # Master encryption key for sensitive data, this is just an example :P
