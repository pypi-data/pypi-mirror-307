import importlib.resources
from datetime import datetime

def generate_gitignore(template_names, output_file, no_header):
    """
    Combines the content of multiple .gitignore templates and generates a single file.

    :param template_names: List of template names (e.g., ['Python', 'Node'])
    :param output_file: Path to the output file (.gitignore)
    :param no_header: Boolean flag to disable custom header in the generated file
    """
    # Custom header
    if not no_header:
        header = (
            "# ======================================\n"
            "# .gitignore file generated by gitignore-cli\n"
            f"# Generated on: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}\n"
            "# For more information, visit: https://github.com/ninjapythonbrasil/gitignore-cli\n"
            "# ======================================\n\n"
        )
    else:
        header = ""

    combined_content = header  # Start with the header, or empty if no header

    # Iterate through the templates and add the content of each
    for template_name in template_names:
        try:
            with importlib.resources.open_text('gitignore_cli.gitignore.templates', f'{template_name}.gitignore') as template:
                content = template.read()
                combined_content += f"# {template_name} .gitignore\n"
                combined_content += content + "\n\n"
        except FileNotFoundError:
            raise FileNotFoundError(f'Template {template_name} not found')

    # Write the combined content to the output file
    with open(output_file, 'w') as output:
        output.write(combined_content)
