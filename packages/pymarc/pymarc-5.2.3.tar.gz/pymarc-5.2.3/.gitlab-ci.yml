stages:
  - linting
  - tests

default:
  image: python:3.8-slim

# linting is only done once with default image
lint:
  stage: linting
  before_script:
    - pip install uv
    - uv venv
    - uv sync
  script:
    - source .venv/bin/activate
    - black --check --diff .
    - flake8 .
    - mypy --ignore-missing-imports .

# run tests and measure coverage with the default python version
test-coverage:
  stage: tests
  before_script:
    - pip install uv
    - uv venv
    - uv sync
  script:
    - source .venv/bin/activate
    - coverage run -m unittest discover
    - coverage xml
    - coverage report
  # integrate coverage reports in GitLab 
  # see https://docs.gitlab.com/ee/ci/testing/test_coverage_visualization.html
  coverage: '/\d+\%\s*$/'
  artifacts:
    name: ${CI_JOB_NAME}-${CI_COMMIT_REF_NAME}
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml
    when: always
    expire_in: 1 day

# run tests on other supported python versions
test-python:
  stage: tests
  parallel:
    matrix:
      - PYTHON_VERSION: ['3.9', '3.10', '3.11', '3.12', '3.13']
  image: python:${PYTHON_VERSION}-slim
  before_script:
    - pip install uv
    - uv venv
    - uv sync
  script:
    - source .venv/bin/activate
    - pytest
