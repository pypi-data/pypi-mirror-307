###############################################################################
#
#  Welcome to Baml! To use this generated code, please run the following:
#
#  $ pip install baml
#
###############################################################################

# This file was generated by BAML: please do not edit it. Instead, edit the
# BAML files and re-generate this code.
#
# ruff: noqa: E501,F401
# flake8: noqa: E501,F401
# pylint: disable=unused-import,line-too-long
# fmt: off
import baml_py
from enum import Enum
from pydantic import BaseModel, ConfigDict
from typing import Dict, List, Optional, Union, Literal

from . import types
from .types import Checked, Check

###############################################################################
#
#  These types are used for streaming, for when an instance of a type
#  is still being built up and any of its fields is not yet fully available.
#
###############################################################################


class ActionNode(BaseModel):
    
    model_config = ConfigDict(extra='allow')
    
    id: Optional[str] = None
    description: Optional[str] = None

class Assumption(BaseModel):
    
    
    assumption_id: Optional[str] = None
    assumption: Optional[str] = None

class Edge(BaseModel):
    
    
    from_id: Optional[str] = None
    to_id: Optional[str] = None

class FilledParams(BaseModel):
    
    model_config = ConfigDict(extra='allow')
    

class Graph(BaseModel):
    
    
    nodes: List["ActionNode"]
    edges: List["Edge"]
