name: Test PyPI Publish

on:
  workflow_call:
    inputs:
      bump_rule:
        description: 'Base version to test (major/minor/patch)'
        type: string
        required: false
        default: 'dev'
    outputs:
      version:
        description: "The generated development version"
        value: ${{ jobs.publish-test.outputs.version }}
  workflow_dispatch:
    inputs:
      bump_rule:
        description: 'Base version to test (major/minor/patch)'
        type: choice
        options:
          - dev
          - patch
          - minor
          - major
        default: 'dev'
        required: true
  pull_request:
    branches: [ main ]

jobs:
  validate:
    uses: ./.github/workflows/ci.yml
  
  test-publish:
    needs: validate
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write
    outputs:
      version: ${{ steps.version.outputs.version }}
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        ref: ${{ github.event.pull_request.head.ref }} # needed for push after bump2version
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Set commit configs (for bump2version)
      run: |
        # configure user
        git config --global user.name "${{ github.actor }}"
        git config --global user.email "${{ github.actor }}@users.noreply.github.com"

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "0.4.29"
        enable-cache: true
        cache-dependency-glob: "uv.lock"

    - name: Set up Python
      run: uv python install 3.12

    - name: Install build dependencies
      run: |
        uv tool install bump2version

    - name: Generate development version
      id: version
      run: |
        # Handle different trigger types
        # TODO: If triggered from publish, use rc instead of dev
        BUMP_RULE="${{ inputs.bump_rule || 'dev' }}"
        echo "Bumping version with rule: $BUMP_RULE"
        
        # Bump the version
        bump2version --allow-dirty --verbose --no-tag $BUMP_RULE
        git push # Need to push the new version change to the repo
        
        # Store version for later use
        echo NEW_VERSION=$(grep 'current_version = ' .bumpversion.cfg | sed 's/current_version = //') >> $GITHUB_ENV

    - name: Build package
      run: uv build

    - name: Publish package distributions to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/

      # Works locally, but for some reason fails in the workflow
    # - name: Test install from TestPyPI
    #   run: |
    #     sleep 120  # Wait for package to be available
    #     uv tool install quartofetch@${{ env.NEW_VERSION }} --index https://test.pypi.org/simple/ --extra-index-url https://pypi.org/simple/ --index-strategy unsafe-best-match
