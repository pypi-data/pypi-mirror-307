# yaml-language-server: $schema=../schemas/ibek.support.schema.json
ioc_name: __IOC_NAME__
description: Camera SIM model with plugins

entities:
  
  - type: ADSimDetector.simDetector
    P: "__IOC_PREFIX__:"
    R: "__IOC_ROOT__:"
    PORT: __IOC_ROOT__
    

  - type: ADCore.NDROI
    PORT: __IOC_ROOT__.ROI1
    NDARRAY_PORT: __IOC_ROOT__
    P: "__IOC_PREFIX__:__IOC_ROOT__"
    R: ":Roi1:"
    ENABLED: 1

  - type: ADCore.NDProcess
    PORT: __IOC_ROOT__.PROC
    P: "__IOC_PREFIX__:__IOC_ROOT__"
    R: ":Proc1:"
    NDARRAY_PORT: __IOC_ROOT__.ROI1
    ENABLED: 1

  - type: ADCore.NDOverlay
    PORT: __IOC_ROOT__.OVERLAY1
    NDARRAY_PORT: __IOC_ROOT__
    P: "__IOC_PREFIX__:__IOC_ROOT__"
    R: ":Overlay1:"
    NAME: "Reference"
    NOverlays: 8
    SHAPE: "3"
    XPOS: ""
    YPOS: ""
    XCENT: ""
    YCENT: ""
    XSIZE: ""
    YSIZE: ""
    XWIDTH: ""
    YWIDTH: ""
    O: "1:"

  # Want to have also high throuput PVA protocol
  - type: ADCore.NDPvaPlugin
    PORT: __IOC_ROOT__.PVA
    PVNAME: "__IOC_PREFIX__:__IOC_ROOT__:PVA:OUTPUT"
    P: "__IOC_PREFIX__:__IOC_ROOT__"
    R: ":Pva1:"
    NDARRAY_PORT: __IOC_ROOT__
    ENABLED: 1
  
  - type: ADCore.NDPvaPlugin
    PORT: __IOC_ROOT__.PVA2
    PVNAME: "__IOC_PREFIX__:__IOC_ROOT__:PROC:OUTPUT"
    P: "__IOC_PREFIX__:__IOC_ROOT__"
    R: ":Proc1:Pva1:"
    NDARRAY_PORT: __IOC_ROOT__.PROC
    ENABLED: 1

  

  
  
  - type: ADCore.NDPvaPlugin
    PORT: __IOC_ROOT__.PVA3
    PVNAME: "__IOC_PREFIX__:__IOC_ROOT__:ROI1:OUTPUT"
    P: "__IOC_PREFIX__:__IOC_ROOT__"
    R: ":Roi1:Pva1:"
    NDARRAY_PORT: __IOC_ROOT__.ROI1
    ENABLED: 1

  

  - type: ADCore.NDStdArrays
    P: "__IOC_PREFIX__:__IOC_ROOT__"
    R: ":image1:"
    PORT: __IOC_ROOT__.NTD
    NDARRAY_PORT: __IOC_ROOT__
    TYPE: CAMERA_TYPE
    FTVL: CAMERA_FTVL
    NELEMENTS: CAMERA_ELEMS
    ENABLED: 1

  
  - type: ADCore.NDPvaPlugin
    PORT: __IOC_ROOT__.PVA4
    PVNAME: "__IOC_PREFIX__:__IOC_ROOT__:OVERLAY1:OUTPUT"
    P: "__IOC_PREFIX__:__IOC_ROOT__"
    R: ":Overlay1:Pva1:"
    NDARRAY_PORT: __IOC_ROOT__.OVERLAY1
    ENABLED: 1

  - type: ADCore.NDStdArrays
    P: "__IOC_PREFIX__:__IOC_ROOT__"
    R: ":image2:"
    PORT: __IOC_ROOT__.NTD2
    NDARRAY_PORT: __IOC_ROOT__.PROC
    TYPE: CAMERA_TYPE
    FTVL: CAMERA_FTVL
    NELEMENTS: CAMERA_ELEMS
    ENABLED: 1

  - type: ADCore.NDStats
    PORT: __IOC_ROOT__.STATS
    NDARRAY_PORT: __IOC_ROOT__
    HIST_SIZE: 50
    P: "__IOC_PREFIX__:__IOC_ROOT__"
    R: ":Stats1:"
    XSIZE: CAMERA_STATS_XSIZE
    YSIZE: CAMERA_STATS_YSIZE
    ENABLED: 1

  - type: ADCore.NDStats
    PORT: __IOC_ROOT__.STATS2
    NDARRAY_PORT: __IOC_ROOT__.PROC
    HIST_SIZE: 50
    P: "__IOC_PREFIX__:__IOC_ROOT__"
    R: ":Proc1:Stats1:"
    XSIZE: CAMERA_STATS_XSIZE
    YSIZE: CAMERA_STATS_YSIZE
    ENABLED: 1
  
  - type: ADCore.NDStats
    PORT: __IOC_ROOT__.STATS3
    NDARRAY_PORT: __IOC_ROOT__.ROI1
    HIST_SIZE: 50
    P: "__IOC_PREFIX__:__IOC_ROOT__"
    R: ":Roi1:Stats1:"
    XSIZE: CAMERA_STATS_XSIZE
    YSIZE: CAMERA_STATS_YSIZE
    ENABLED: 1

  




  - type: ADCore.NDFileTIFF
    PORT: __IOC_ROOT__.TIFF
    NDARRAY_PORT: __IOC_ROOT__
    P: "__IOC_PREFIX__:__IOC_ROOT__"
    R: ":TIFF1:"
    ENABLED: 1

  - type: ADCore.NDFileTIFF
    PORT: __IOC_ROOT__.TIFF2
    NDARRAY_PORT: __IOC_ROOT__.PROC
    P: "__IOC_PREFIX__:__IOC_ROOT__"
    R: ":Proc1:TIFF1:"
    ENABLED: 1

  - type: ADCore.NDFileTIFF
    PORT: __IOC_ROOT__.TIFF3
    NDARRAY_PORT: __IOC_ROOT__.ROI1
    P: "__IOC_PREFIX__:__IOC_ROOT__"
    R: ":Roi1:TIFF1:"
    ENABLED: 1

  - type: ADCore.NDFileTIFF
    PORT: __IOC_ROOT__.TIFF4
    NDARRAY_PORT: __IOC_ROOT__.OVERLAY1
    P: "__IOC_PREFIX__:__IOC_ROOT__"
    R: ":Overlay1:TIFF1:"
    ENABLED: 1

  - type: epics.PostStartupCommand 
    command: dbl              ## dumps PV NAMES

  - type: epics.PostStartupCommand 
    command: |
      dbl("*") > __CONFIG_DIR__/pvlist.txt
      dbpf("__IOC_PREFIX__:__IOC_ROOT__:TIFF1:FilePath", "__DATA_DIR__")
      dbpf("__IOC_PREFIX__:__IOC_ROOT__:TIFF1:FileWriteMode",2)
      dbpf("__IOC_PREFIX__:__IOC_ROOT__:TIFF1:FileName","camera")
      dbpf("__IOC_PREFIX__:__IOC_ROOT__:TIFF1:AutoIncrement",1)

      dbpf("__IOC_PREFIX__:__IOC_ROOT__:TIFF1:FileTemplate","%s%s_%3.3d.tiff")
      dbpf("__IOC_PREFIX__:__IOC_ROOT__:Proc1:TIFF1:FilePath", "__DATA_DIR__")
      dbpf("__IOC_PREFIX__:__IOC_ROOT__:Proc1:TIFF1:FileWriteMode",2)
      dbpf("__IOC_PREFIX__:__IOC_ROOT__:Proc1:TIFF1:FileName","__IOC_ROOT__")
      dbpf("__IOC_PREFIX__:__IOC_ROOT__:Proc1:TIFF1:AutoIncrement",1)
      dbpf("__IOC_PREFIX__:__IOC_ROOT__:Proc1:TIFF1:FileTemplate","%s%s_proc_%3.3d.tiff")

      dbpf("__IOC_PREFIX__:__IOC_ROOT__:Proc1:TIFF:FilePath", "__DATA_DIR__")
      dbpf("__IOC_PREFIX__:__IOC_ROOT__:Proc1:TIFF:FileWriteMode",2)
      dbpf("__IOC_PREFIX__:__IOC_ROOT__:Proc1:TIFF:FileName","__IOC_ROOT__")
      dbpf("__IOC_PREFIX__:__IOC_ROOT__:Proc1:TIFF:AutoIncrement",1)
      dbpf("__IOC_PREFIX__:__IOC_ROOT__:Proc1:TIFF:FileTemplate","%s%s_proc_%3.3d.tiff")

      dbpf("__IOC_PREFIX__:__IOC_ROOT__:Roi1:TIFF1:FilePath", "__DATA_DIR__")
      dbpf("__IOC_PREFIX__:__IOC_ROOT__:Roi1:TIFF1:FileWriteMode",2)
      dbpf("__IOC_PREFIX__:__IOC_ROOT__:Roi1:TIFF1:FileName","__IOC_ROOT__")
      dbpf("__IOC_PREFIX__:__IOC_ROOT__:Roi1:TIFF1:AutoIncrement",1)
      dbpf("__IOC_PREFIX__:__IOC_ROOT__:Roi1:TIFF1:FileTemplate","%s%s_roi_%3.3d.tiff")
      dbpf("__IOC_PREFIX__:__IOC_ROOT__:Overlay1:TIFF1:FilePath", "__DATA_DIR__")
      dbpf("__IOC_PREFIX__:__IOC_ROOT__:Overlay1:TIFF1:FileWriteMode",2)
      dbpf("__IOC_PREFIX__:__IOC_ROOT__:Overlay1:TIFF1:FileTemplate","%s%s_overlay_%3.3d.tiff")
      dbpf("__IOC_PREFIX__:__IOC_ROOT__:Overlay1:TIFF1:FileName","__IOC_ROOT__")
      dbpf("__IOC_PREFIX__:__IOC_ROOT__:Overlay1:EnableCallbacks","1")
      < __IOC_TOP__/init.cmd
  - type: epics.EpicsCaMaxArrayBytes 
    max_bytes: 10000000