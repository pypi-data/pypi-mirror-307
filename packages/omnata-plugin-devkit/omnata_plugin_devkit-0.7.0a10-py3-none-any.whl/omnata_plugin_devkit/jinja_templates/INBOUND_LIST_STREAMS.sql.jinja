create or replace procedure PLUGIN.INBOUND_LIST_STREAMS(CONNECTION_METHOD VARCHAR,
                                                CONNECTION_PARAMETERS OBJECT,
                                                OAUTH_SECRET_NAME VARCHAR,
                                                OTHER_SECRETS_NAME VARCHAR,
                                                SYNC_PARAMETERS OBJECT,
                                                SELECTED_STREAMS ARRAY)
returns object
language python
RUNTIME_VERSION = '3.10'
PACKAGES = ({{packages}})
IMPORTS = ('/app.zip')
HANDLER = 'run'
COMMENT = $$
Retrieves a list of inbound streams for a connection.
If SELECTED_STREAMS is defined, those streams must contain json schema, otherwise it's permitted for them to be null.
$$
execute as owner
as
$$
from logging import getLogger
from omnata_plugin_runtime.logging import log_exception
import json
logger = getLogger(__name__)
def run(session,connection_method,connection_parameters,oauth_secret_name,other_secrets_name,sync_parameters,selected_streams):
   try:
      logger.info('plugin entrypoint wrapper')
      from omnata_plugin_runtime.plugin_entrypoints import PluginEntrypoint
      logger.info('importing plugin {{plugin_class_name}} from module {{plugin_class_module}}')
      entrypoint = PluginEntrypoint(session=session,
         plugin_fqn='{{plugin_fqn}}',
         module_name='{{plugin_class_module}}',
         class_name='{{plugin_class_name}}'
      )
      result = entrypoint.inbound_list_streams(connection_method,connection_parameters,oauth_secret_name,other_secrets_name,sync_parameters,selected_streams)
      logger.debug(f'result from plugin: {result}')
      return {
         "success": True,
         "data": result
      }
   except Exception as exception:
      log_exception(exception,logger)
      return {
         "success": False,
         "error": f"INBOUND_LIST_STREAMS: {str(exception)}"
      }
$$
;
   
grant usage on procedure PLUGIN.INBOUND_LIST_STREAMS(VARCHAR,
                                                OBJECT,
                                                VARCHAR,
                                                VARCHAR,
                                                OBJECT,
                                                ARRAY)
to application role OMNATA_MANAGEMENT;
