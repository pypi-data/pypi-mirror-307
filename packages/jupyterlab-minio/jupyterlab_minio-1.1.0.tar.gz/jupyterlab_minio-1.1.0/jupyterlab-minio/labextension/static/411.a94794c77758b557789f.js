"use strict";(self.webpackChunkjupyterlab_minio=self.webpackChunkjupyterlab_minio||[]).push([[411],{411:(e,t,n)=>{n.r(t),n.d(t,{default:()=>k});var o=n(103),i=n(568),r=n(838),a=n(851),s=n(644),c=n(207),l=n(454),u=n(162);async function m(e,t){const n=u.ServerConnection.makeSettings();return await(await u.ServerConnection.makeRequest(c.URLExt.join(n.baseUrl,"jupyterlab-minio/files",e),{method:"PUT",body:JSON.stringify({content:t})},n)).json()}async function d(e){const t=u.ServerConnection.makeSettings(),n=await(await u.ServerConnection.makeRequest(c.URLExt.join(t.baseUrl,"jupyterlab-minio/files",e),{method:"GET",headers:{"X-Custom-S3-Is-Dir":"true"}},t)).json();return{type:"directory",path:e.trim(),name:"",format:"json",content:n.map((e=>function(e){return{name:e.name,path:e.path,format:"json",type:e.type,created:"",writable:!0,last_modified:"",mimetype:e.mimetype,content:e.content}}(e))),created:"",writable:!0,last_modified:"",mimetype:""}}var h,y=n(977);class p{constructor(e){this._isDisposed=!1,this._fileChanged=new s.Signal(this),this._registry=e}get name(){return"S3"}get fileChanged(){return this._fileChanged}get isDisposed(){return this._isDisposed}dispose(){this.isDisposed||(this._isDisposed=!0,s.Signal.clearData(this))}async get(e,t){var n;if(!t||"file"!==t.type&&"notebook"!==t.type)return await d(e);{const t=await async function(e){const t=u.ServerConnection.makeSettings();return(await u.ServerConnection.makeRequest(c.URLExt.join(t.baseUrl,"jupyterlab-minio/files",e),{method:"GET"},t)).json()}(e),o=this._registry.getFileTypesForPath(e),i=0===o.length?null!==(n=this._registry.getFileType("text"))&&void 0!==n?n:void 0:o[0],r=i.mimeTypes[0],a=i.fileFormat;let s;switch(a){case"text":s=h.b64DecodeUTF8(t.content);break;case"base64":s=t.content;break;case"json":s=JSON.parse(h.b64DecodeUTF8(t.content));break;default:throw new Error(`Unexpected file format: ${i.fileFormat}`)}return{type:"file",path:e,name:"",format:a,content:s,created:"",writable:!0,last_modified:"",mimetype:r}}}async getDownloadUrl(e){throw await(0,y.showDialog)({title:"Sorry",body:"This feature is not yet implemented.",buttons:[y.Dialog.cancelButton({label:"Cancel"})]}),Error("Not yet implemented")}async newUntitled(e={}){var t;let n;const o="untitled";let i=o;const r=(await d(e.path)).content.map((e=>e.name));let a=0;for(;r.includes(i);)a++,i=o+a;switch(e.type){case"file":n=await m(e.path+"/"+i,"");break;case"directory":if(""===e.path)throw new Error("Bucket creation is not currently supported.");n=await async function(e){const t=u.ServerConnection.makeSettings();return await(await u.ServerConnection.makeRequest(c.URLExt.join(t.baseUrl,"jupyterlab-minio/files",e),{method:"PUT",headers:{"X-Custom-S3-Is-Dir":"true"}},t)).json(),{type:"directory",path:e.trim(),name:"Untitled",format:"json",content:[],created:"",writable:!0,last_modified:"",mimetype:""}}(e.path+"/"+i);break;default:throw new Error(`Unexpected type: ${e.type}`)}const s=this._registry.getFileTypesForPath(n.path),l=0===s.length?null!==(t=this._registry.getFileType("text"))&&void 0!==t?t:void 0:s[0],h=l.mimeTypes[0],y=l.fileFormat,p={type:e.type,path:e.path,name:i,format:y,content:"",created:"",writable:!0,last_modified:"",mimetype:h};return this._fileChanged.emit({type:"new",oldValue:null,newValue:p}),p}async delete(e){const t=await async function(e){const t=u.ServerConnection.makeSettings();return await(await u.ServerConnection.makeRequest(c.URLExt.join(t.baseUrl,"jupyterlab-minio/files",e),{method:"DELETE"},t)).json()}(e);if(t.error&&"DIR_NOT_EMPTY"===t.error)throw new Error(`${e} is not empty. Deletion of non-empty directories is not currently supported.`);this._fileChanged.emit({type:"delete",oldValue:{path:e},newValue:null})}async rename(e,t){if(!e.includes("/"))throw Error("Renaming of buckets is not currently supported.");const n=await async function(e,t){const n=u.ServerConnection.makeSettings();return await(await u.ServerConnection.makeRequest(c.URLExt.join(n.baseUrl,"jupyterlab-minio/files",t),{method:"PUT",headers:{"X-Custom-S3-Move-Src":e}},n)).json()}(e,t);return this._fileChanged.emit({type:"rename",oldValue:{path:e},newValue:n}),n}async save(e,t){var n;let o=t.content;"base64"===t.format?o=h.b64DecodeUTF8(t.content):"json"===t.format&&(o=JSON.stringify(t.content));const i=await m(e,o),r=this._registry.getFileTypesForPath(i.path),a=0===r.length?null!==(n=this._registry.getFileType("text"))&&void 0!==n?n:void 0:r[0],s=a.mimeTypes[0],c=a.fileFormat,l={type:t.type,path:t.path,name:t.name,format:c,content:o,created:"",writable:!0,last_modified:"",mimetype:s};return this._fileChanged.emit({type:"save",oldValue:null,newValue:l}),l}async copy(e,t){let n=c.PathExt.basename(e).split(".")[0];n+="-copy";const o="/"+t+"/"+n+c.PathExt.extname(e),i=await async function(e,t){const n=u.ServerConnection.makeSettings();return await(await u.ServerConnection.makeRequest(c.URLExt.join(n.baseUrl,"jupyterlab-minio/files",t),{method:"PUT",headers:{"X-Custom-S3-Copy-Src":e}},n)).json()}(e,o);return this._fileChanged.emit({type:"new",oldValue:null,newValue:i}),i}async createCheckpoint(e){}async listCheckpoints(e){return[]}async restoreCheckpoint(e,t){throw Error("Not yet implemented")}async deleteCheckpoint(e,t){}}!function(e){const t=new TextDecoder("utf8");e.b64DecodeUTF8=function(e){const n=l.toByteArray(e.replace(/\n/g,""));return t.decode(n)}}(h||(h={}));var f=n(112),w=n(841),g=n(666);let b;class S extends f.Widget{constructor(e,t,n){super(),this.addClass("jp-S3Browser"),this.layout=new f.PanelLayout;const o=new y.ToolbarButton({icon:g.settingsIcon,tooltip:"Reset Your Credentials",onClick:async()=>{(await(0,y.showDialog)({title:"Confirmation Required",body:"You have requested to reset your credentials. Before proceeding, we would like to confirm if you intended to make this request.",buttons:[y.Dialog.cancelButton(),y.Dialog.okButton({label:"Confirm"})]})).button.accept&&(console.log("Configuration confirmed."),C.deleteConfigFile().then((({success:t,message:n})=>{t?(this.layout.removeWidget(e),this.layout.addWidget(b)):(0,y.showErrorMessage)("Credentials Reset Error",Error(n))})))}}),i=new y.ToolbarButton({icon:g.refreshIcon,tooltip:"Refresh",onClick:()=>{e.model.refresh()}});e.toolbar.insertItem(10,"filebrowser:refresh",i),e.toolbar.insertItem(12,"setting",o);const r=()=>{const t=document.querySelector("#minio-form"),n=new FormData(t),o={};n.forEach(((e,t)=>{o[t]=e}));const i=u.ServerConnection.makeSettings();u.ServerConnection.makeRequest(c.URLExt.join(i.baseUrl,"jupyterlab-minio/auth"),{method:"POST",body:JSON.stringify(o)},i).then((t=>{t.json().then((t=>{if(t.success)this.layout.removeWidget(b),this.layout.addWidget(e),e.model.refresh();else{let e=t.message;e.includes("InvalidAccessKeyId")?e="The access key ID you entered was invalid.":e.includes("SignatureDoesNotMatch")&&(e="The secret access key you entered was invalid"),(0,y.showErrorMessage)("S3 Authentication Error",Error(e))}}))}))};C.checkIfAuthenicated().then((t=>{b=new f.Widget({node:C.createS3AuthenticationForm(r)}),t?(this.layout.addWidget(e),setTimeout((()=>{e.model.refresh()}),1e3)):this.layout.addWidget(b)}))}}var C;!function(e){e.createS3AuthenticationForm=function(e){return w.VirtualDOM.realize(w.h.div({className:"minio-form"},w.h.h4("Minio Object Storage Browser"),w.h.div("This extension allows you to browse Minio"),w.h.br(),w.h.form({id:"minio-form",method:"post"},w.h.p(w.h.label({},"Endpoint URL"),w.h.br(),w.h.input({type:"url",name:"url"})),w.h.br(),w.h.p(w.h.label({},"Access Key ID"),w.h.br(),w.h.input({type:"text",name:"accessKey"})),w.h.br(),w.h.p(w.h.label({},"Secret Access Key"),w.h.br(),w.h.input({type:"password",name:"secretKey"}))),w.h.br(),w.h.p({className:"s3-connect"},w.h.button({onclick:e,className:"jp-mod-accept jp-mod-styled"},"Connect"))))},e.checkIfAuthenicated=function(){return new Promise(((e,t)=>{const n=u.ServerConnection.makeSettings();u.ServerConnection.makeRequest(c.URLExt.join(n.baseUrl,"jupyterlab-minio/auth"),{method:"GET"},n).then((t=>{t.json().then((t=>{e(t.authenticated)}))}))}))},e.deleteConfigFile=function(){return new Promise(((e,t)=>{const n=u.ServerConnection.makeSettings();u.ServerConnection.makeRequest(c.URLExt.join(n.baseUrl,"jupyterlab-minio/auth"),{method:"DELETE"},n).then((t=>{t.json().then((t=>{e({success:t.success,message:t.message||""})}))}))}))}}(C||(C={}));const v="minio-filebrowser",k={id:"jupyterlab-minio:plugin",autoStart:!0,optional:[r.IDocumentManager,a.IFileBrowserFactory,o.ILayoutRestorer,i.ISettingRegistry],activate:function(e,t,n,o,i){const r=new p(e.docRegistry);t.services.contents.addDrive(r);const a=n.createFileBrowser(v,{driveName:r.name,state:null,refreshInterval:3e5}),s=new S(a,r,t);return s.title.iconClass="jp-minio-icon jp-SideBar-tabIcon",s.title.caption="Minio Browser",s.id="minio-file-browser",o.add(s,v),void e.shell.add(s,"left",{rank:100})}}}}]);