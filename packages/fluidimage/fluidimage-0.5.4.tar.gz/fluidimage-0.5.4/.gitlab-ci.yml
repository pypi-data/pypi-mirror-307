stages:
  - pixi
  - image
  - lint
  - test
  - test-release
  - doc
  - build
  - zenodo

variables:
  COVERAGE_DIR: .coverage_$CI_COMMIT_SHA
  DOCKER_IMAGE_PATH: registry.heptapod.net:443/fluiddyn/fluidimage/ci/default

image: $DOCKER_IMAGE_PATH:stable

# ugly workaround https://gitlab.com/gitlab-org/gitlab/-/issues/370052#note_1207556577
workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS
      when: never
    - if: $CI_COMMIT_BRANCH
    - if: $CI_COMMIT_TAG


pixi-test:
  stage: pixi
  image: registry.heptapod.net:443/fluiddyn/fluiddyn/ci/default:pixi
  script:
    - pixi info
    - pixi run install-editable
    - pixi run test


# Build an image for the other tasks; this should be a scheduled job, as
# it is quite unnecessary to run on every invocation.
image:build:
  stage: image
  needs: []
  tags:
    - container-registry-push
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
    - if: '$CI_BUILD_IMAGES == "1"'
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [ "" ]
  before_script:
    - ""
  script:
    - |
      cat > /kaniko/.docker/config.json <<EOF
      {
        "auths": {
          "$CI_REGISTRY": {
            "username": "$CI_REGISTRY_USER",
            "password": "$CI_REGISTRY_PASSWORD"
          }
        }
      }
      EOF
    - >
      /kaniko/executor --context $CI_PROJECT_DIR
      --dockerfile $CI_PROJECT_DIR/docker/Dockerfile
      --single-snapshot
      --cleanup
      --destination $DOCKER_IMAGE_PATH:stable


validate_code:
  stage: lint
  needs:
    - job: "image:build"
      optional: true
  script:
    - nox -s validate_code


tests:
  stage: test
  needs:
    - job: "image:build"
      optional: true
  script:
    - xvfb-run nox -s "test(cov=True, with_opencv=True)"

tests-no-opencv:
  stage: test
  needs:
    - job: "image:build"
      optional: true
  script:
    - xvfb-run nox -s "test(cov=True, with_opencv=False)"


test-release:examples:
  stage: test-release
  needs:
    - job: "image:build"
      optional: true
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
    - if: '$CI_TEST_RELEASE == "1"'
  script:
    - nox -s test-examples


pages:
  stage: doc
  needs:
    - job: "image:build"
      optional: true
  variables:
    FLUIDFFT_TRANSONIC_BACKEND: "python"
  script:
    - xvfb-run --auto-servernum nox -s doc
    - mkdir -p public/$CI_COMMIT_REF_NAME
    - rsync -rvc --delete doc/_build/html/* public/$CI_COMMIT_REF_NAME/
    # This directory can become too large leading to error.
    # It can be purged with the botton "Clear runner caches"
    # in https://foss.heptapod.net/fluiddyn/fluidimage/-/pipelines
    - ls public
    - echo "CI_COMMIT_REF_NAME="$CI_COMMIT_REF_NAME
    - echo See https://fluiddyn.pages.heptapod.net/fluidimage/$CI_COMMIT_REF_NAME
  artifacts:
    name: "$CI_COMMIT_REF_NAME"
    paths:
      - public
    expire_in: 5 days
  when: always


build:package:
  stage: build
  before_script:
    - pip install build twine
  script:
    - rm -rf dist
    - python -m build -s
    - ls dist
    - twine check --strict dist/*
  needs: []
  artifacts:
    when: always
    paths:
      - dist
    expire_in: 24 hrs


zenodo:upload:
  stage: zenodo
  image: python:3.11
  rules:
    - if: $CI_COMMIT_TAG =~ /^[0-9]+\.[0-9]+/
  needs: []
  before_script:
    - pip install nox
  script:
    - nox -s zenodo-upload
