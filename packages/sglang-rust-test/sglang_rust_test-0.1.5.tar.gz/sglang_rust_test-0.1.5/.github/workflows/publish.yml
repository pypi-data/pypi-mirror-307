name: Python Release

on:
  push:
    tags:
      - v*

jobs:
  build:
    name: Build on ${{ matrix.os }} (${{ matrix.target }})
    runs-on: ${{ matrix.os }}-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          # Linux x86_64 builds
          - os: ubuntu
            target: x86_64
            interpreter: "3.9 3.10"
          # # Linux aarch64 builds
          # - os: ubuntu
          #   target: aarch64
          #   interpreter: "3.8 3.9 3.10 3.11"

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install twine
        run: pip install -U twine

      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          manylinux: auto
          args: --release --out dist --interpreter ${{ matrix.interpreter }}
          rust-toolchain: stable

      - name: List wheels
        run: ls -lh dist/

      - name: Check wheels
        run: twine check --strict dist/*

      - uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}-${{ matrix.target }}
          path: dist

  build-sdist:
    name: Build SDist
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v4
      - uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist
          rust-toolchain: stable
      - uses: actions/upload-artifact@v4
        with:
          name: wheels-sdist
          path: dist

  upload:
    name: Upload to PyPI
    needs: [build, build-sdist]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: dist
          merge-multiple: true

      - name: Upload to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          pip install twine
          twine upload dist/* --verbose