from typing import Any

import requests
from _typeshed import Incomplete

from .connector_activation_util import boto_client_error as boto_client_error

LAYER_TAR_DIR: str
LAYER_GZ_DIR: str
MARKETPLACE: str
CUSTOM: str
HTTP_PROXY: str
HTTPS_PROXY: str
NO_PROXY: str
logger: Incomplete

def add_stream_handler() -> None: ...
def run_commands(commands: list[str]) -> tuple[bytes, bytes]: ...
def send_get_request(url: str, header: dict[str, str]) -> requests.Response: ...
def parse_url(url: str) -> tuple[str, str]: ...
def extract_ecr_region(ecr_root: str) -> None | str: ...
def extract_registry_id(ecr_root: str) -> str: ...
def get_ecr_authorization_token(ecr_root: str) -> str: ...
def parse_ecr_url(ecr_url: str) -> tuple[str, str, str]: ...
def get_docker_manifest(ecr_url: str, header: dict[str, str]) -> dict[str, Any]: ...
def download_and_unpack_docker_layer(ecr_url: str, digest: str, dir_prefix: str, header: dict[str, str]) -> None: ...
def parse_args(args: list[str]) -> list[str]: ...
def id_generator(size: int = 5, chars: str = ...) -> str: ...
def get_connection(region: str, endpoint: str, conn: str, proxy: str = None) -> dict | None: ...
def collect_files_by_suffix(input_dir: str, suffix: str) -> list[str]: ...
def download_custom_jars(conn: dict[str, Any], dest_folder: str = '/tmp/custom_connection_jars'): ...
def download_jars_per_connection(conn: str, region: str, endpoint: str, proxy: str = None) -> list[str]: ...
def main() -> None: ...
