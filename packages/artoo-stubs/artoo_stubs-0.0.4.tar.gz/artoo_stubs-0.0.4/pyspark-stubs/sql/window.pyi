from py4j.java_gateway import JavaObject
from pyspark.sql._typing import ColumnOrName, ColumnOrName_

__all__ = ['Window', 'WindowSpec']

class Window:
    unboundedPreceding: int
    unboundedFollowing: int
    currentRow: int
    @staticmethod
    def partitionBy(*cols: ColumnOrName | list['ColumnOrName_']) -> WindowSpec: ...
    @staticmethod
    def orderBy(*cols: ColumnOrName | list['ColumnOrName_']) -> WindowSpec: ...
    @staticmethod
    def rowsBetween(start: int, end: int) -> WindowSpec: ...
    @staticmethod
    def rangeBetween(start: int, end: int) -> WindowSpec: ...

class WindowSpec:
    def __init__(self, jspec: JavaObject) -> None: ...
    def partitionBy(self, *cols: ColumnOrName | list['ColumnOrName_']) -> WindowSpec: ...
    def orderBy(self, *cols: ColumnOrName | list['ColumnOrName_']) -> WindowSpec: ...
    def rowsBetween(self, start: int, end: int) -> WindowSpec: ...
    def rangeBetween(self, start: int, end: int) -> WindowSpec: ...
