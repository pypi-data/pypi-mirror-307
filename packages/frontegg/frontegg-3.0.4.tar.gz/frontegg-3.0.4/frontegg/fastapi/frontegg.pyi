from _typeshed import Incomplete
from frontegg.common import FronteggAuthenticator as FronteggAuthenticator, IdentityClientMixin as IdentityClientMixin
from frontegg.common.frontegg_context import FronteggContext as FronteggContext
from typing import Optional

class Frontegg:
    async_authenticator: Incomplete
    async_identity_client: Incomplete
    def __init__(self) -> None: ...
    async def init_app(self, client_id: str, api_key: str, options=...): ...
    @property
    def should_refresh_vendor_token(self) -> bool: ...
    @property
    def access_token(self): ...
    async def refresh_vendor_token(self) -> None: ...
    @property
    def client_id(self): ...
    @property
    def api_key(self): ...
    async def get_public_key(self) -> str: ...
    async def fetch_public_key(self) -> str: ...
    async def validate_identity_on_token(self, token, options, type): ...
    async def decode_jwt(self, authorization_header, verify: Optional[bool] = ...): ...

frontegg: Incomplete
