Metadata-Version: 2.1
Name: dodata
Version: 0.6.1
Summary: Software Development Kit - SDK for DoData
Author-email: DoPlayDo <contact@doplaydo.com>
License: The MIT License (MIT)
        
        Copyright (c) 2023 DoPlayDo
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
        
Classifier: Programming Language :: Python :: 3.11
Classifier: Operating System :: OS Independent
Requires-Python: >=3.11
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: dodata-core==0.5.1
Requires-Dist: klayout>=0.28.15
Requires-Dist: pandas
Requires-Dist: pillow
Requires-Dist: httpx[http2]
Requires-Dist: psycopg2-binary
Requires-Dist: pydantic<3,>=2
Requires-Dist: pydantic-settings
Requires-Dist: sqlmodel>=0.0.14
Requires-Dist: tqdm
Provides-Extra: demos
Requires-Dist: gdsfactory<8.18.0,>=8.13.3; extra == "demos"
Requires-Dist: jupyterlab; extra == "demos"
Requires-Dist: plotly; extra == "demos"
Provides-Extra: dev
Requires-Dist: ruff; extra == "dev"
Requires-Dist: mypy; extra == "dev"
Requires-Dist: pre-commit; extra == "dev"
Requires-Dist: pytest; extra == "dev"
Requires-Dist: towncrier; extra == "dev"
Requires-Dist: tbump; extra == "dev"
Requires-Dist: pytest-regressions; extra == "dev"
Requires-Dist: pytest-cov; extra == "dev"
Provides-Extra: docs
Requires-Dist: jupyter-book<1.1,>=0.15.1; extra == "docs"
Requires-Dist: jupytext; extra == "docs"
Requires-Dist: matplotlib; extra == "docs"
Provides-Extra: maintainer
Requires-Dist: eralchemy2; extra == "maintainer"
Requires-Dist: types-cachetools; extra == "maintainer"
Requires-Dist: types-requests; extra == "maintainer"
Requires-Dist: types-setuptools; extra == "maintainer"
Requires-Dist: types-docutils; extra == "maintainer"
Requires-Dist: types-Pygments; extra == "maintainer"
Requires-Dist: pylsp-mypy; extra == "maintainer"
Requires-Dist: python-lsp-server[all]; extra == "maintainer"
Requires-Dist: python-lsp-ruff; extra == "maintainer"

# DoData python library 0.6.1

In chip design, managing a variety of data types is essential:

- Simulations
- Layouts
- Verification results (DRC, LVS ...)
- Measurements
- Yield, qualification data

![data-wave](https://i.imgur.com/ZkghNZK.png)

DoData delivers a cutting-edge data storage solution specifically crafted for the complexities of chip design. Our platform seamlessly integrates into your existing workflow, offering a scalable approach to store, manage, and analyze all your critical chip data files, enhancing both efficiency and effectiveness in your design process.

![data-types](https://i.imgur.com/Gd4Ci66.png)

![device-die-wafer](https://i.imgur.com/ZwIWS08.png)


## Installation

We only support Python 3.11 or 3.12, and recommend [VSCode](https://code.visualstudio.com/) IDE.

You will need [Anaconda python](https://www.anaconda.com/download/).

After installing python, open Anaconda Prompt as Administrator and install psycopg2 with conda and the rest of the dependencies using pip.

![anaconda prompt](https://i.imgur.com/eKk2bbs.png)

```
conda install -c conda-forge psycopg2 -y
pip install "dodata[demos]" --upgrade
```

## Setup

Make sure you create an `.env` file in your working directory.

```
dodata_url = 'https://your.dodata.url.here'
dodata_user = 'dodata_user'
dodata_password = 'dodata_web_password'
dodata_db = 'your.dodata.database.url.here'
dodata_db_user = "db_username_here"
dodata_db_password = "db_password_here"
dodata_db_name = "dodata"
data_db_port = 5432
debug = False
```

The `.env` file can be in the same directory run the notebooks from or in a parent directory.

## Run notebooks

For running the notebooks you can use VSCode or JupyterLab.

- For VSCode make sure you use the same conda python interpreter where you installed the packages .
- For JupyterLab you can launch `jupyter-lab` from the same terminal where you run the installation.

Then, make sure you run the notebooks in order:

- `1_generate_layout`: generate GDS layout and CSV device manifest with device coordinates, settings and analysis.
- `2_generate_measurement_data`: generate CSV measurement data.
- `3_upload_measurements`: Upload wafer definitions and measurement data.
- `4_download_data`: Download analysis using conditional.
- `5_delete`: Delete data.
