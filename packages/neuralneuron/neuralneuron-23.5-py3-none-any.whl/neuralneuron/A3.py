def a3():
    print('''
# -*- coding: utf-8 -*-
IR_3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1dyQx2LQy5j8WY6pPJVUfp2UzY07waiVA


import numpy as np
import pandas as pd
from sklearn.datasets import load_iris
from sklearn.cluster import AgglomerativeClustering
import matplotlib.pyplot as plt
import seaborn as sns
from scipy.cluster.hierarchy import dendrogram, linkage

# Load the Iris dataset
iris = load_iris()
data = iris.data
feature_names = iris.feature_names

# Convert to DataFrame for better readability
df = pd.DataFrame(data, columns=feature_names)
df

# Perform Agglomerative Clustering
model = AgglomerativeClustering(n_clusters=3, linkage='average', metric='euclidean')
labels = model.fit_predict(data)

# Add the cluster labels to the DataFrame
df['Cluster'] = labels

# Plot the clusters
plt.figure(figsize=(10, 7))
sns.scatterplot(x=data[:, 0], y=data[:, 1], hue=labels, palette='viridis')
plt.title('Agglomerative Hierarchical Clustering (Iris Dataset)')
plt.xlabel('Feature 1')
plt.ylabel('Feature 2')
plt.legend(title='Cluster')
plt.show()

# Plot the dendrogram
linked = linkage(data, method='ward')
plt.figure(figsize=(10, 7))
dendrogram(linked, orientation='top', distance_sort='ascending', show_leaf_counts=True)
plt.title('Dendrogram')
plt.xlabel('Samples')
plt.ylabel('Distance')
plt.show()







''')
a3()
