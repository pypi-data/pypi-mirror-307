def b6():
    print("""# -*- coding: utf-8 -*-
'DMV-6.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1eU_nuzBiQp0YbH1e-I8vugrUM32-Nn-u
'

import pandas as pd
import matplotlib.pyplot as plt

'# Import the "customer_shopping_data.csv" dataset.'

df = pd.read_csv("customer_shopping_data.csv")
df

'# Explore the dataset to understand its structure and content.
+ rows and columns
+ Missing values
+ info
+ describe
+ features
'

df.shape

df.isnull().sum()

df.info()

df.describe()

df.columns

'# Identify the relevant variables for aggregating sales data, such as region, sales amount, and product category.
+ quality + price = Total sales
+ shopping mall + category = total_sales, avg_sales, total_quantity
'

df['total_sales_amount'] = df['quantity'] * df['price']
df

sales_summary = df.groupby(['shopping_mall', 'category']).agg(
    total_sales=('total_sales_amount', 'sum'),
    avg_sales=('total_sales_amount', 'mean'),
    total_quantity_sold=('quantity', 'sum')
).reset_index()

sales_summary

'# Group the sales data by region and calculate the total sales amount for each region.'

branch_sales = df.groupby("shopping_mall").sum()
branch_sales_summary = branch_sales[['total_sales_amount']]
branch_sales_summary

category_sales = df.groupby("category").sum()
category_sales_summary = category_sales[['total_sales_amount']]
category_sales_summary

'# pie charts to visualize the sales distribution by region
# Identify the top-performing regions based on the highest sales amount.
'

fig = px.pie(branch_sales, values="price", names=branch_sales.index, title="Total Price by Shopping Mall")
fig.show()

fig = px.pie(category_sales, values="price", names=category_sales.index, title="Total Price by Shopping Mall")
fig.show()

'# Create stacked bar plots or grouped bar plots to compare the sales amounts across different regions and product categories.'

combined_pivot = df.pivot_table(index="shopping_mall", columns="category", values="price", aggfunc="sum")
combined_pivot.plot(kind="bar", figsize=(10, 6))
plt.show()

""")
b6()
