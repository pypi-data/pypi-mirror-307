def b3():
    print("""# -*- coding: utf-8 -*-
'DMV-3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1o7NBWG8L-KuHwrRD-t_1dePH52vLKPuS

# Required Import
'

import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn import metrics

'# Loading and Exploring dataset'

data = pd.read_csv("telecom_customer_churn.csv")
data

data.columns

data.dtypes

print(data.info)

data.describe()

data.nunique()

data.shape

'# Handle Missing Values in Dataset
+ Null values
+ Duplicates
'

data.isnull().sum()

'# Remove if any Duplicated'

data.duplicated().sum()

'# Formatting columns | Can be used to count number male and females.
+ male   : 0
+ female : 1
'

data.replace(to_replace=["Male","Female"], value={0,1}, inplace=True)
data['gender']

'# Unique Number & count'

counts, unique = np.unique(data['tenure'], return_counts = True)
print(f"-------------- Unique Data ------------ \n{unique} \n-------------- Count ------------\n{counts}")

counts, unique = np.unique(data['MonthlyCharges'], return_counts = True)
print(f"-------------- Unique Data ------------ \n{unique} \n-------------- Count ------------\n{counts}")

counts, unique = np.unique(data['TotalCharges'], return_counts = True)
print(f"-------------- Unique Data ------------ \n{unique} \n-------------- Count ------------\n{counts}")

'# feature Engineering'

data['TotalCharges'] = pd.to_numeric(data['TotalCharges'], errors='coerce')
data['AvgMonthlySpend'] = data['TotalCharges'] / data['tenure']
data['AvgMonthlySpend']

'+ month-to-month = 1
+ else 0
'

data['IsMonthlyContract'] = (data['Contract'] == 'Month-to-month').astype(int)
data['IsMonthlyContract']

'# Outlier'

plt.boxplot(data['tenure'])
plt.title("Boxplot of Customer Tenure")
plt.grid("whitegrid")
plt.xlabel("Customer Tenure")
plt.ylabel("Months")
plt.show()

plt.boxplot(data['MonthlyCharges'])
plt.title("Boxplot of Customer Tenure")
plt.grid("whitegrid")
plt.xlabel("Customer Monthly Charges")
plt.ylabel("Charges ($)")
plt.title("Boxplot of Customer Monthly Charges")
plt.show()

'# Spliting dataset'

X = data.drop("Churn", axis=1)
y = data["Churn"]

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

X_train.shape

X_test.shape

y_test.shape

y_train.shape

'#'

data.to_csv("Preprocessed_data.csv", index=False)

""")
b3()
