name: Build

on:
  workflow_dispatch:  
  push:
    branches:
      - main
    paths:
      - "src/**"
      - "native/**"
      - ".github/workflows/build_wheels.yml"
  release:
    types:
      - published

jobs:
  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Build SDist
        run: pipx run build --sdist

      - name: Check metadata
        run: pipx run twine check dist/*

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-sdist
          path: dist/*.tar.gz

  build_wheels:
    name: Build wheel on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-14 ]

    steps:
      - uses: actions/checkout@v3

      - name: Install Ninja
        if: ${{ matrix.os == 'windows-latest' }}
        shell: bash
        run: |
          choco install ninja
          echo "CMAKE_GENERATOR=Ninja" >> "$GITHUB_ENV"

      - name: Pre-build libmusly
        shell: bash
        run: |
          curl -SL https://github.com/andban/musly/archive/refs/tags/v2.0-cmake.2.zip -o $RUNNER_TEMP/musly.zip
          cd $RUNNER_TEMP
          unzip musly.zip
          cd musly-2.0-cmake.2
          cmake -S . -B build -DMUSLY_USE_OWN_LIBRESAMPLE=TRUE -DMUSLY_USE_OWN_LIBKISSFFT=TRUE -DCMAKE_OSX_DEPLOYMENT_TARGET=11.0
          cmake --build build --config Release

      - name: Install libmusly
        shell: bash
        if: ${{ matrix.os != 'windows-latest' }}
        run: |
          cd $RUNNER_TEMP/musly-2.0-cmake.2
          sudo cmake --install build

      - name: Install libmusly
        shell: bash
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          cd $RUNNER_TEMP/musly-2.0-cmake.2
          cmake --install build

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.21.3
        env:
          CIBW_SKIP: pp* *-musllinux*
          CIBW_ARCHS_MACOS: auto
          CIBW_ARCHS_LINUX: x86_64
          CIBW_ARCHS_WINDOWS: AMD64
          CIBW_ENVIRONMENT_WINDOWS: CMAKE_GENERATOR=Ninja

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl

  upload_wheels:
    name: Publish to PyPi
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'
    
    environment:
      name: pypi
      url: https://pypi.org/p/pymusly
    permissions:
      id-token: write

    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: cibw-*
          path: dist
          merge-multiple: true

      - uses: pypa/gh-action-pypi-publish@v1.10.3
