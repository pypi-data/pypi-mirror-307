# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class JobStatus(str, enum.Enum):
    UNKNOWN = "UNKNOWN"
    PENDING = "PENDING"
    RUNNING = "RUNNING"
    SUCCEEDED = "SUCCEEDED"
    CANCELLED = "CANCELLED"
    FAILED = "FAILED"

    def visit(
        self,
        unknown: typing.Callable[[], T_Result],
        pending: typing.Callable[[], T_Result],
        running: typing.Callable[[], T_Result],
        succeeded: typing.Callable[[], T_Result],
        cancelled: typing.Callable[[], T_Result],
        failed: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is JobStatus.UNKNOWN:
            return unknown()
        if self is JobStatus.PENDING:
            return pending()
        if self is JobStatus.RUNNING:
            return running()
        if self is JobStatus.SUCCEEDED:
            return succeeded()
        if self is JobStatus.CANCELLED:
            return cancelled()
        if self is JobStatus.FAILED:
            return failed()
