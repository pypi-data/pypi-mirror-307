/*! DESIGN-SYSTEM v0.0.3 | SPDX-License-Identifier: MIT | License-Filename: LICENSE.md | restricted use (see terms and conditions) */
const n=window["design-system"],e=n.internals.ns.selector("accordion"),o=n.internals.ns.selector("collapse"),c={GROUP:n.internals.ns.selector("accordions-group"),ACCORDION:e,COLLAPSE:`${e} > ${o}, ${e} > *:not(${e}):not(${o}) > ${o}, ${e} > *:not(${e}):not(${o}) > *:not(${e}):not(${o}) > ${o}`,COLLAPSE_LEGACY:`${e} ${o}`,BUTTON:`${e}__btn`};class r extends n.core.Instance{static get instanceClassName(){return"Accordion"}get collapsePrimary(){return this.element.children.map((n=>n.getInstance("CollapseButton"))).filter((n=>null!==n&&n.hasClass(c.BUTTON)))[0]}}class s extends n.core.CollapsesGroup{static get instanceClassName(){return"AccordionsGroup"}validate(e){const o=e.node.matches(n.internals.legacy.isLegacy?c.COLLAPSE_LEGACY:c.COLLAPSE);return super.validate(e)&&o}}n.accordion={Accordion:r,AccordionSelector:c,AccordionsGroup:s},n.internals.register(n.accordion.AccordionSelector.GROUP,n.accordion.AccordionsGroup),n.internals.register(n.accordion.AccordionSelector.ACCORDION,n.accordion.Accordion);
//# sourceMappingURL=accordion.module.min.js.map
