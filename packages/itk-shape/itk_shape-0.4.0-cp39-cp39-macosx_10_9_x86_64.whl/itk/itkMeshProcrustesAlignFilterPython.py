# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ShapePython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkMeshProcrustesAlignFilterPython
else:
    import _itkMeshProcrustesAlignFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkAffineTransformPython
import itk.itkTransformBasePython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkFixedArrayPython
import itk.pyBasePython
import itk.itkMatrixPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.itkCovariantVectorPython
import itk.vnl_vector_refPython
import itk.itkVectorPython
import itk.vnl_matrix_fixedPython
import itk.itkPointPython
import itk.itkVariableLengthVectorPython
import itk.itkDiffusionTensor3DPython
import itk.ITKCommonBasePython
import itk.itkOptimizerParametersPython
import itk.itkArrayPython
import itk.itkArray2DPython
import itk.itkMatrixOffsetTransformBasePython
import itk.itkMeshBasePython
import itk.itkVectorContainerPython
import itk.itkContinuousIndexPython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.itkBoundingBoxPython
import itk.itkMapContainerPython
import itk.itkPointSetPython
class itkMeshProcrustesAlignFilterMD3MD3_Superclass(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkMeshProcrustesAlignFilterMD3MD3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def GetInputNames(self):
        r"""GetInputNames(self) -> vectorstring"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMD3MD3_Superclass_GetInputNames(self)

    def GetRequiredInputNames(self):
        r"""GetRequiredInputNames(self) -> vectorstring"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMD3MD3_Superclass_GetRequiredInputNames(self)

    def GetInputs(self):
        r"""GetInputs(self) -> vectoritkDataObject"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMD3MD3_Superclass_GetInputs(self)

    def HasInput(self, key):
        r"""
        HasInput(self, key) -> bool

        Parameters
        ----------
        key: std::string const &

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMD3MD3_Superclass_HasInput(self, key)

    def GetNumberOfInputs(self):
        r"""GetNumberOfInputs(self) -> unsigned long"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMD3MD3_Superclass_GetNumberOfInputs(self)

    def GetNumberOfOutputs(self):
        r"""GetNumberOfOutputs(self) -> unsigned long"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMD3MD3_Superclass_GetNumberOfOutputs(self)

    def GetOutputNames(self):
        r"""GetOutputNames(self) -> vectorstring"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMD3MD3_Superclass_GetOutputNames(self)

    def GetOutputs(self):
        r"""GetOutputs(self) -> vectoritkDataObject"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMD3MD3_Superclass_GetOutputs(self)

    def HasOutput(self, key):
        r"""
        HasOutput(self, key) -> bool

        Parameters
        ----------
        key: std::string const &

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMD3MD3_Superclass_HasOutput(self, key)

    def GetIndexedInputs(self):
        r"""GetIndexedInputs(self) -> vectoritkDataObject"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMD3MD3_Superclass_GetIndexedInputs(self)

    def GetNumberOfIndexedInputs(self):
        r"""GetNumberOfIndexedInputs(self) -> unsigned long"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMD3MD3_Superclass_GetNumberOfIndexedInputs(self)

    def GetNumberOfValidRequiredInputs(self):
        r"""GetNumberOfValidRequiredInputs(self) -> unsigned long"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMD3MD3_Superclass_GetNumberOfValidRequiredInputs(self)

    def GetIndexedOutputs(self):
        r"""GetIndexedOutputs(self) -> vectoritkDataObject"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMD3MD3_Superclass_GetIndexedOutputs(self)

    def GetNumberOfIndexedOutputs(self):
        r"""GetNumberOfIndexedOutputs(self) -> unsigned long"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMD3MD3_Superclass_GetNumberOfIndexedOutputs(self)

    def MakeOutput(self, *args):
        r"""
        MakeOutput(self, arg0) -> itkDataObject_Pointer

        Parameters
        ----------
        arg0: std::string const &

        MakeOutput(self, idx) -> itkDataObject_Pointer

        Parameters
        ----------
        idx: unsigned long

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMD3MD3_Superclass_MakeOutput(self, *args)

    def SetAbortGenerateData(self, _arg):
        r"""
        SetAbortGenerateData(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMD3MD3_Superclass_SetAbortGenerateData(self, _arg)

    def GetAbortGenerateData(self):
        r"""GetAbortGenerateData(self) -> bool const &"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMD3MD3_Superclass_GetAbortGenerateData(self)

    def AbortGenerateDataOn(self):
        r"""AbortGenerateDataOn(self)"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMD3MD3_Superclass_AbortGenerateDataOn(self)

    def AbortGenerateDataOff(self):
        r"""AbortGenerateDataOff(self)"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMD3MD3_Superclass_AbortGenerateDataOff(self)

    def GetProgress(self):
        r"""GetProgress(self) -> float"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMD3MD3_Superclass_GetProgress(self)

    def UpdateProgress(self, progress):
        r"""
        UpdateProgress(self, progress)

        Parameters
        ----------
        progress: float

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMD3MD3_Superclass_UpdateProgress(self, progress)

    def IncrementProgress(self, increment):
        r"""
        IncrementProgress(self, increment)

        Parameters
        ----------
        increment: float

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMD3MD3_Superclass_IncrementProgress(self, increment)

    def Update(self):
        r"""Update(self)"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMD3MD3_Superclass_Update(self)

    def UpdateLargestPossibleRegion(self):
        r"""UpdateLargestPossibleRegion(self)"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMD3MD3_Superclass_UpdateLargestPossibleRegion(self)

    def UpdateOutputInformation(self):
        r"""UpdateOutputInformation(self)"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMD3MD3_Superclass_UpdateOutputInformation(self)

    def PropagateRequestedRegion(self, output):
        r"""
        PropagateRequestedRegion(self, output)

        Parameters
        ----------
        output: itkDataObject *

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMD3MD3_Superclass_PropagateRequestedRegion(self, output)

    def UpdateOutputData(self, output):
        r"""
        UpdateOutputData(self, output)

        Parameters
        ----------
        output: itkDataObject *

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMD3MD3_Superclass_UpdateOutputData(self, output)

    def EnlargeOutputRequestedRegion(self, arg0):
        r"""
        EnlargeOutputRequestedRegion(self, arg0)

        Parameters
        ----------
        arg0: itkDataObject *

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMD3MD3_Superclass_EnlargeOutputRequestedRegion(self, arg0)

    def ResetPipeline(self):
        r"""ResetPipeline(self)"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMD3MD3_Superclass_ResetPipeline(self)

    def SetReleaseDataFlag(self, val):
        r"""
        SetReleaseDataFlag(self, val)

        Parameters
        ----------
        val: bool

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMD3MD3_Superclass_SetReleaseDataFlag(self, val)

    def GetReleaseDataFlag(self):
        r"""GetReleaseDataFlag(self) -> bool"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMD3MD3_Superclass_GetReleaseDataFlag(self)

    def ReleaseDataFlagOn(self):
        r"""ReleaseDataFlagOn(self)"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMD3MD3_Superclass_ReleaseDataFlagOn(self)

    def ReleaseDataFlagOff(self):
        r"""ReleaseDataFlagOff(self)"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMD3MD3_Superclass_ReleaseDataFlagOff(self)

    def SetReleaseDataBeforeUpdateFlag(self, _arg):
        r"""
        SetReleaseDataBeforeUpdateFlag(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMD3MD3_Superclass_SetReleaseDataBeforeUpdateFlag(self, _arg)

    def GetReleaseDataBeforeUpdateFlag(self):
        r"""GetReleaseDataBeforeUpdateFlag(self) -> bool const &"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMD3MD3_Superclass_GetReleaseDataBeforeUpdateFlag(self)

    def ReleaseDataBeforeUpdateFlagOn(self):
        r"""ReleaseDataBeforeUpdateFlagOn(self)"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMD3MD3_Superclass_ReleaseDataBeforeUpdateFlagOn(self)

    def ReleaseDataBeforeUpdateFlagOff(self):
        r"""ReleaseDataBeforeUpdateFlagOff(self)"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMD3MD3_Superclass_ReleaseDataBeforeUpdateFlagOff(self)

    def SetNumberOfWorkUnits(self, _arg):
        r"""
        SetNumberOfWorkUnits(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMD3MD3_Superclass_SetNumberOfWorkUnits(self, _arg)

    def GetNumberOfWorkUnits(self):
        r"""GetNumberOfWorkUnits(self) -> unsigned int const &"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMD3MD3_Superclass_GetNumberOfWorkUnits(self)

    def GetMultiThreader(self):
        r"""GetMultiThreader(self) -> itkMultiThreaderBase"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMD3MD3_Superclass_GetMultiThreader(self)

    def SetMultiThreader(self, threader):
        r"""
        SetMultiThreader(self, threader)

        Parameters
        ----------
        threader: itkMultiThreaderBase *

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMD3MD3_Superclass_SetMultiThreader(self, threader)

    def PrepareOutputs(self):
        r"""PrepareOutputs(self)"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMD3MD3_Superclass_PrepareOutputs(self)
    __swig_destroy__ = _itkMeshProcrustesAlignFilterPython.delete_itkMeshProcrustesAlignFilterMD3MD3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeshProcrustesAlignFilterMD3MD3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMD3MD3_Superclass_cast(obj)

# Register itkMeshProcrustesAlignFilterMD3MD3_Superclass in _itkMeshProcrustesAlignFilterPython:
_itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMD3MD3_Superclass_swigregister(itkMeshProcrustesAlignFilterMD3MD3_Superclass)
class itkMeshProcrustesAlignFilterMF3MF3_Superclass(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkMeshProcrustesAlignFilterMF3MF3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def GetInputNames(self):
        r"""GetInputNames(self) -> vectorstring"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMF3MF3_Superclass_GetInputNames(self)

    def GetRequiredInputNames(self):
        r"""GetRequiredInputNames(self) -> vectorstring"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMF3MF3_Superclass_GetRequiredInputNames(self)

    def GetInputs(self):
        r"""GetInputs(self) -> vectoritkDataObject"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMF3MF3_Superclass_GetInputs(self)

    def HasInput(self, key):
        r"""
        HasInput(self, key) -> bool

        Parameters
        ----------
        key: std::string const &

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMF3MF3_Superclass_HasInput(self, key)

    def GetNumberOfInputs(self):
        r"""GetNumberOfInputs(self) -> unsigned long"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMF3MF3_Superclass_GetNumberOfInputs(self)

    def GetNumberOfOutputs(self):
        r"""GetNumberOfOutputs(self) -> unsigned long"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMF3MF3_Superclass_GetNumberOfOutputs(self)

    def GetOutputNames(self):
        r"""GetOutputNames(self) -> vectorstring"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMF3MF3_Superclass_GetOutputNames(self)

    def GetOutputs(self):
        r"""GetOutputs(self) -> vectoritkDataObject"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMF3MF3_Superclass_GetOutputs(self)

    def HasOutput(self, key):
        r"""
        HasOutput(self, key) -> bool

        Parameters
        ----------
        key: std::string const &

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMF3MF3_Superclass_HasOutput(self, key)

    def GetIndexedInputs(self):
        r"""GetIndexedInputs(self) -> vectoritkDataObject"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMF3MF3_Superclass_GetIndexedInputs(self)

    def GetNumberOfIndexedInputs(self):
        r"""GetNumberOfIndexedInputs(self) -> unsigned long"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMF3MF3_Superclass_GetNumberOfIndexedInputs(self)

    def GetNumberOfValidRequiredInputs(self):
        r"""GetNumberOfValidRequiredInputs(self) -> unsigned long"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMF3MF3_Superclass_GetNumberOfValidRequiredInputs(self)

    def GetIndexedOutputs(self):
        r"""GetIndexedOutputs(self) -> vectoritkDataObject"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMF3MF3_Superclass_GetIndexedOutputs(self)

    def GetNumberOfIndexedOutputs(self):
        r"""GetNumberOfIndexedOutputs(self) -> unsigned long"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMF3MF3_Superclass_GetNumberOfIndexedOutputs(self)

    def MakeOutput(self, *args):
        r"""
        MakeOutput(self, arg0) -> itkDataObject_Pointer

        Parameters
        ----------
        arg0: std::string const &

        MakeOutput(self, idx) -> itkDataObject_Pointer

        Parameters
        ----------
        idx: unsigned long

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMF3MF3_Superclass_MakeOutput(self, *args)

    def SetAbortGenerateData(self, _arg):
        r"""
        SetAbortGenerateData(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMF3MF3_Superclass_SetAbortGenerateData(self, _arg)

    def GetAbortGenerateData(self):
        r"""GetAbortGenerateData(self) -> bool const &"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMF3MF3_Superclass_GetAbortGenerateData(self)

    def AbortGenerateDataOn(self):
        r"""AbortGenerateDataOn(self)"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMF3MF3_Superclass_AbortGenerateDataOn(self)

    def AbortGenerateDataOff(self):
        r"""AbortGenerateDataOff(self)"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMF3MF3_Superclass_AbortGenerateDataOff(self)

    def GetProgress(self):
        r"""GetProgress(self) -> float"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMF3MF3_Superclass_GetProgress(self)

    def UpdateProgress(self, progress):
        r"""
        UpdateProgress(self, progress)

        Parameters
        ----------
        progress: float

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMF3MF3_Superclass_UpdateProgress(self, progress)

    def IncrementProgress(self, increment):
        r"""
        IncrementProgress(self, increment)

        Parameters
        ----------
        increment: float

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMF3MF3_Superclass_IncrementProgress(self, increment)

    def Update(self):
        r"""Update(self)"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMF3MF3_Superclass_Update(self)

    def UpdateLargestPossibleRegion(self):
        r"""UpdateLargestPossibleRegion(self)"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMF3MF3_Superclass_UpdateLargestPossibleRegion(self)

    def UpdateOutputInformation(self):
        r"""UpdateOutputInformation(self)"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMF3MF3_Superclass_UpdateOutputInformation(self)

    def PropagateRequestedRegion(self, output):
        r"""
        PropagateRequestedRegion(self, output)

        Parameters
        ----------
        output: itkDataObject *

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMF3MF3_Superclass_PropagateRequestedRegion(self, output)

    def UpdateOutputData(self, output):
        r"""
        UpdateOutputData(self, output)

        Parameters
        ----------
        output: itkDataObject *

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMF3MF3_Superclass_UpdateOutputData(self, output)

    def EnlargeOutputRequestedRegion(self, arg0):
        r"""
        EnlargeOutputRequestedRegion(self, arg0)

        Parameters
        ----------
        arg0: itkDataObject *

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMF3MF3_Superclass_EnlargeOutputRequestedRegion(self, arg0)

    def ResetPipeline(self):
        r"""ResetPipeline(self)"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMF3MF3_Superclass_ResetPipeline(self)

    def SetReleaseDataFlag(self, val):
        r"""
        SetReleaseDataFlag(self, val)

        Parameters
        ----------
        val: bool

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMF3MF3_Superclass_SetReleaseDataFlag(self, val)

    def GetReleaseDataFlag(self):
        r"""GetReleaseDataFlag(self) -> bool"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMF3MF3_Superclass_GetReleaseDataFlag(self)

    def ReleaseDataFlagOn(self):
        r"""ReleaseDataFlagOn(self)"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMF3MF3_Superclass_ReleaseDataFlagOn(self)

    def ReleaseDataFlagOff(self):
        r"""ReleaseDataFlagOff(self)"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMF3MF3_Superclass_ReleaseDataFlagOff(self)

    def SetReleaseDataBeforeUpdateFlag(self, _arg):
        r"""
        SetReleaseDataBeforeUpdateFlag(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMF3MF3_Superclass_SetReleaseDataBeforeUpdateFlag(self, _arg)

    def GetReleaseDataBeforeUpdateFlag(self):
        r"""GetReleaseDataBeforeUpdateFlag(self) -> bool const &"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMF3MF3_Superclass_GetReleaseDataBeforeUpdateFlag(self)

    def ReleaseDataBeforeUpdateFlagOn(self):
        r"""ReleaseDataBeforeUpdateFlagOn(self)"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMF3MF3_Superclass_ReleaseDataBeforeUpdateFlagOn(self)

    def ReleaseDataBeforeUpdateFlagOff(self):
        r"""ReleaseDataBeforeUpdateFlagOff(self)"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMF3MF3_Superclass_ReleaseDataBeforeUpdateFlagOff(self)

    def SetNumberOfWorkUnits(self, _arg):
        r"""
        SetNumberOfWorkUnits(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMF3MF3_Superclass_SetNumberOfWorkUnits(self, _arg)

    def GetNumberOfWorkUnits(self):
        r"""GetNumberOfWorkUnits(self) -> unsigned int const &"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMF3MF3_Superclass_GetNumberOfWorkUnits(self)

    def GetMultiThreader(self):
        r"""GetMultiThreader(self) -> itkMultiThreaderBase"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMF3MF3_Superclass_GetMultiThreader(self)

    def SetMultiThreader(self, threader):
        r"""
        SetMultiThreader(self, threader)

        Parameters
        ----------
        threader: itkMultiThreaderBase *

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMF3MF3_Superclass_SetMultiThreader(self, threader)

    def PrepareOutputs(self):
        r"""PrepareOutputs(self)"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMF3MF3_Superclass_PrepareOutputs(self)
    __swig_destroy__ = _itkMeshProcrustesAlignFilterPython.delete_itkMeshProcrustesAlignFilterMF3MF3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeshProcrustesAlignFilterMF3MF3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMF3MF3_Superclass_cast(obj)

# Register itkMeshProcrustesAlignFilterMF3MF3_Superclass in _itkMeshProcrustesAlignFilterPython:
_itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMF3MF3_Superclass_swigregister(itkMeshProcrustesAlignFilterMF3MF3_Superclass)
class itkMeshProcrustesAlignFilterMSS3MSS3_Superclass(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkMeshProcrustesAlignFilterMSS3MSS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def GetInputNames(self):
        r"""GetInputNames(self) -> vectorstring"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMSS3MSS3_Superclass_GetInputNames(self)

    def GetRequiredInputNames(self):
        r"""GetRequiredInputNames(self) -> vectorstring"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMSS3MSS3_Superclass_GetRequiredInputNames(self)

    def GetInputs(self):
        r"""GetInputs(self) -> vectoritkDataObject"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMSS3MSS3_Superclass_GetInputs(self)

    def HasInput(self, key):
        r"""
        HasInput(self, key) -> bool

        Parameters
        ----------
        key: std::string const &

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMSS3MSS3_Superclass_HasInput(self, key)

    def GetNumberOfInputs(self):
        r"""GetNumberOfInputs(self) -> unsigned long"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMSS3MSS3_Superclass_GetNumberOfInputs(self)

    def GetNumberOfOutputs(self):
        r"""GetNumberOfOutputs(self) -> unsigned long"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMSS3MSS3_Superclass_GetNumberOfOutputs(self)

    def GetOutputNames(self):
        r"""GetOutputNames(self) -> vectorstring"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMSS3MSS3_Superclass_GetOutputNames(self)

    def GetOutputs(self):
        r"""GetOutputs(self) -> vectoritkDataObject"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMSS3MSS3_Superclass_GetOutputs(self)

    def HasOutput(self, key):
        r"""
        HasOutput(self, key) -> bool

        Parameters
        ----------
        key: std::string const &

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMSS3MSS3_Superclass_HasOutput(self, key)

    def GetIndexedInputs(self):
        r"""GetIndexedInputs(self) -> vectoritkDataObject"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMSS3MSS3_Superclass_GetIndexedInputs(self)

    def GetNumberOfIndexedInputs(self):
        r"""GetNumberOfIndexedInputs(self) -> unsigned long"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMSS3MSS3_Superclass_GetNumberOfIndexedInputs(self)

    def GetNumberOfValidRequiredInputs(self):
        r"""GetNumberOfValidRequiredInputs(self) -> unsigned long"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMSS3MSS3_Superclass_GetNumberOfValidRequiredInputs(self)

    def GetIndexedOutputs(self):
        r"""GetIndexedOutputs(self) -> vectoritkDataObject"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMSS3MSS3_Superclass_GetIndexedOutputs(self)

    def GetNumberOfIndexedOutputs(self):
        r"""GetNumberOfIndexedOutputs(self) -> unsigned long"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMSS3MSS3_Superclass_GetNumberOfIndexedOutputs(self)

    def MakeOutput(self, *args):
        r"""
        MakeOutput(self, arg0) -> itkDataObject_Pointer

        Parameters
        ----------
        arg0: std::string const &

        MakeOutput(self, idx) -> itkDataObject_Pointer

        Parameters
        ----------
        idx: unsigned long

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMSS3MSS3_Superclass_MakeOutput(self, *args)

    def SetAbortGenerateData(self, _arg):
        r"""
        SetAbortGenerateData(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMSS3MSS3_Superclass_SetAbortGenerateData(self, _arg)

    def GetAbortGenerateData(self):
        r"""GetAbortGenerateData(self) -> bool const &"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMSS3MSS3_Superclass_GetAbortGenerateData(self)

    def AbortGenerateDataOn(self):
        r"""AbortGenerateDataOn(self)"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMSS3MSS3_Superclass_AbortGenerateDataOn(self)

    def AbortGenerateDataOff(self):
        r"""AbortGenerateDataOff(self)"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMSS3MSS3_Superclass_AbortGenerateDataOff(self)

    def GetProgress(self):
        r"""GetProgress(self) -> float"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMSS3MSS3_Superclass_GetProgress(self)

    def UpdateProgress(self, progress):
        r"""
        UpdateProgress(self, progress)

        Parameters
        ----------
        progress: float

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMSS3MSS3_Superclass_UpdateProgress(self, progress)

    def IncrementProgress(self, increment):
        r"""
        IncrementProgress(self, increment)

        Parameters
        ----------
        increment: float

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMSS3MSS3_Superclass_IncrementProgress(self, increment)

    def Update(self):
        r"""Update(self)"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMSS3MSS3_Superclass_Update(self)

    def UpdateLargestPossibleRegion(self):
        r"""UpdateLargestPossibleRegion(self)"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMSS3MSS3_Superclass_UpdateLargestPossibleRegion(self)

    def UpdateOutputInformation(self):
        r"""UpdateOutputInformation(self)"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMSS3MSS3_Superclass_UpdateOutputInformation(self)

    def PropagateRequestedRegion(self, output):
        r"""
        PropagateRequestedRegion(self, output)

        Parameters
        ----------
        output: itkDataObject *

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMSS3MSS3_Superclass_PropagateRequestedRegion(self, output)

    def UpdateOutputData(self, output):
        r"""
        UpdateOutputData(self, output)

        Parameters
        ----------
        output: itkDataObject *

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMSS3MSS3_Superclass_UpdateOutputData(self, output)

    def EnlargeOutputRequestedRegion(self, arg0):
        r"""
        EnlargeOutputRequestedRegion(self, arg0)

        Parameters
        ----------
        arg0: itkDataObject *

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMSS3MSS3_Superclass_EnlargeOutputRequestedRegion(self, arg0)

    def ResetPipeline(self):
        r"""ResetPipeline(self)"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMSS3MSS3_Superclass_ResetPipeline(self)

    def SetReleaseDataFlag(self, val):
        r"""
        SetReleaseDataFlag(self, val)

        Parameters
        ----------
        val: bool

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMSS3MSS3_Superclass_SetReleaseDataFlag(self, val)

    def GetReleaseDataFlag(self):
        r"""GetReleaseDataFlag(self) -> bool"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMSS3MSS3_Superclass_GetReleaseDataFlag(self)

    def ReleaseDataFlagOn(self):
        r"""ReleaseDataFlagOn(self)"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMSS3MSS3_Superclass_ReleaseDataFlagOn(self)

    def ReleaseDataFlagOff(self):
        r"""ReleaseDataFlagOff(self)"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMSS3MSS3_Superclass_ReleaseDataFlagOff(self)

    def SetReleaseDataBeforeUpdateFlag(self, _arg):
        r"""
        SetReleaseDataBeforeUpdateFlag(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMSS3MSS3_Superclass_SetReleaseDataBeforeUpdateFlag(self, _arg)

    def GetReleaseDataBeforeUpdateFlag(self):
        r"""GetReleaseDataBeforeUpdateFlag(self) -> bool const &"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMSS3MSS3_Superclass_GetReleaseDataBeforeUpdateFlag(self)

    def ReleaseDataBeforeUpdateFlagOn(self):
        r"""ReleaseDataBeforeUpdateFlagOn(self)"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMSS3MSS3_Superclass_ReleaseDataBeforeUpdateFlagOn(self)

    def ReleaseDataBeforeUpdateFlagOff(self):
        r"""ReleaseDataBeforeUpdateFlagOff(self)"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMSS3MSS3_Superclass_ReleaseDataBeforeUpdateFlagOff(self)

    def SetNumberOfWorkUnits(self, _arg):
        r"""
        SetNumberOfWorkUnits(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMSS3MSS3_Superclass_SetNumberOfWorkUnits(self, _arg)

    def GetNumberOfWorkUnits(self):
        r"""GetNumberOfWorkUnits(self) -> unsigned int const &"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMSS3MSS3_Superclass_GetNumberOfWorkUnits(self)

    def GetMultiThreader(self):
        r"""GetMultiThreader(self) -> itkMultiThreaderBase"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMSS3MSS3_Superclass_GetMultiThreader(self)

    def SetMultiThreader(self, threader):
        r"""
        SetMultiThreader(self, threader)

        Parameters
        ----------
        threader: itkMultiThreaderBase *

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMSS3MSS3_Superclass_SetMultiThreader(self, threader)

    def PrepareOutputs(self):
        r"""PrepareOutputs(self)"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMSS3MSS3_Superclass_PrepareOutputs(self)
    __swig_destroy__ = _itkMeshProcrustesAlignFilterPython.delete_itkMeshProcrustesAlignFilterMSS3MSS3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeshProcrustesAlignFilterMSS3MSS3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMSS3MSS3_Superclass_cast(obj)

# Register itkMeshProcrustesAlignFilterMSS3MSS3_Superclass in _itkMeshProcrustesAlignFilterPython:
_itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMSS3MSS3_Superclass_swigregister(itkMeshProcrustesAlignFilterMSS3MSS3_Superclass)

def itkMeshProcrustesAlignFilterMUC3MUC3_New():
    return itkMeshProcrustesAlignFilterMUC3MUC3.New()

class itkMeshProcrustesAlignFilterMUC3MUC3(itkMeshProcrustesAlignFilterMSS3MSS3_Superclass):
    r"""Proxy of C++ itkMeshProcrustesAlignFilterMUC3MUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeshProcrustesAlignFilterMUC3MUC3_Pointer"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUC3MUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeshProcrustesAlignFilterMUC3MUC3_Pointer"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUC3MUC3_Clone(self)

    def SetNumberOfInputs(self, num):
        r"""
        SetNumberOfInputs(self, num)

        Parameters
        ----------
        num: unsigned int

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUC3MUC3_SetNumberOfInputs(self, num)

    def SetInput(self, idx, mesh):
        r"""
        SetInput(self, idx, mesh)

        Parameters
        ----------
        idx: unsigned int
        mesh: itkMeshUC3 *

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUC3MUC3_SetInput(self, idx, mesh)

    def GetInput(self, idx):
        r"""
        GetInput(self, idx) -> itkMeshUC3

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUC3MUC3_GetInput(self, idx)

    def GetOutput(self, idx):
        r"""
        GetOutput(self, idx) -> itkMeshUC3

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUC3MUC3_GetOutput(self, idx)

    def GetMean(self):
        r"""GetMean(self) -> itkMeshUC3"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUC3MUC3_GetMean(self)

    def GetTransform(self, idx):
        r"""
        GetTransform(self, idx) -> itkAffineTransformD3

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUC3MUC3_GetTransform(self, idx)

    def GetRotationDegrees(self, transform):
        r"""
        GetRotationDegrees(self, transform) -> itkVectorD3

        Parameters
        ----------
        transform: itkAffineTransformD3 *

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUC3MUC3_GetRotationDegrees(self, transform)

    def PrintTransform(self, transform):
        r"""
        PrintTransform(self, transform)

        Parameters
        ----------
        transform: itkAffineTransformD3 *

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUC3MUC3_PrintTransform(self, transform)

    def GetConvergence(self):
        r"""GetConvergence(self) -> double"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUC3MUC3_GetConvergence(self)

    def SetConvergence(self, _arg):
        r"""
        SetConvergence(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUC3MUC3_SetConvergence(self, _arg)

    def SetUseScalingOn(self):
        r"""SetUseScalingOn(self)"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUC3MUC3_SetUseScalingOn(self)

    def SetUseScalingOff(self):
        r"""SetUseScalingOff(self)"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUC3MUC3_SetUseScalingOff(self)

    def SetUseScaling(self, _arg):
        r"""
        SetUseScaling(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUC3MUC3_SetUseScaling(self, _arg)

    def GetUseScaling(self):
        r"""GetUseScaling(self) -> bool"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUC3MUC3_GetUseScaling(self)

    def SetUseInitialAverageOn(self):
        r"""SetUseInitialAverageOn(self)"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUC3MUC3_SetUseInitialAverageOn(self)

    def SetUseInitialAverageOff(self):
        r"""SetUseInitialAverageOff(self)"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUC3MUC3_SetUseInitialAverageOff(self)

    def SetUseInitialAverage(self, _arg):
        r"""
        SetUseInitialAverage(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUC3MUC3_SetUseInitialAverage(self, _arg)

    def GetUseInitialAverage(self):
        r"""GetUseInitialAverage(self) -> bool"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUC3MUC3_GetUseInitialAverage(self)

    def SetUseNormalizationOn(self):
        r"""SetUseNormalizationOn(self)"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUC3MUC3_SetUseNormalizationOn(self)

    def SetUseNormalizationOff(self):
        r"""SetUseNormalizationOff(self)"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUC3MUC3_SetUseNormalizationOff(self)

    def SetUseNormalization(self, _arg):
        r"""
        SetUseNormalization(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUC3MUC3_SetUseNormalization(self, _arg)

    def GetUseNormalization(self):
        r"""GetUseNormalization(self) -> bool"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUC3MUC3_GetUseNormalization(self)

    def SetUseSingleIterationOn(self):
        r"""SetUseSingleIterationOn(self)"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUC3MUC3_SetUseSingleIterationOn(self)

    def SetUseSingleIterationOff(self):
        r"""SetUseSingleIterationOff(self)"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUC3MUC3_SetUseSingleIterationOff(self)

    def SetUseSingleIteration(self, _arg):
        r"""
        SetUseSingleIteration(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUC3MUC3_SetUseSingleIteration(self, _arg)

    def GetUseSingleIteration(self):
        r"""GetUseSingleIteration(self) -> bool"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUC3MUC3_GetUseSingleIteration(self)

    def SetAlignRotationOn(self):
        r"""SetAlignRotationOn(self)"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUC3MUC3_SetAlignRotationOn(self)

    def SetAlignRotationOff(self):
        r"""SetAlignRotationOff(self)"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUC3MUC3_SetAlignRotationOff(self)

    def SetAlignRotation(self, _arg):
        r"""
        SetAlignRotation(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUC3MUC3_SetAlignRotation(self, _arg)

    def GetAlignRotation(self):
        r"""GetAlignRotation(self) -> bool"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUC3MUC3_GetAlignRotation(self)

    def GetMeanPointsDifference(self):
        r"""GetMeanPointsDifference(self) -> double"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUC3MUC3_GetMeanPointsDifference(self)
    __swig_destroy__ = _itkMeshProcrustesAlignFilterPython.delete_itkMeshProcrustesAlignFilterMUC3MUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeshProcrustesAlignFilterMUC3MUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUC3MUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeshProcrustesAlignFilterMUC3MUC3

        Create a new object of the class itkMeshProcrustesAlignFilterMUC3MUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshProcrustesAlignFilterMUC3MUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshProcrustesAlignFilterMUC3MUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshProcrustesAlignFilterMUC3MUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshProcrustesAlignFilterMUC3MUC3 in _itkMeshProcrustesAlignFilterPython:
_itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUC3MUC3_swigregister(itkMeshProcrustesAlignFilterMUC3MUC3)
class itkMeshProcrustesAlignFilterMUC3MUC3_Superclass(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkMeshProcrustesAlignFilterMUC3MUC3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def GetInputNames(self):
        r"""GetInputNames(self) -> vectorstring"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUC3MUC3_Superclass_GetInputNames(self)

    def GetRequiredInputNames(self):
        r"""GetRequiredInputNames(self) -> vectorstring"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUC3MUC3_Superclass_GetRequiredInputNames(self)

    def GetInputs(self):
        r"""GetInputs(self) -> vectoritkDataObject"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUC3MUC3_Superclass_GetInputs(self)

    def HasInput(self, key):
        r"""
        HasInput(self, key) -> bool

        Parameters
        ----------
        key: std::string const &

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUC3MUC3_Superclass_HasInput(self, key)

    def GetNumberOfInputs(self):
        r"""GetNumberOfInputs(self) -> unsigned long"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUC3MUC3_Superclass_GetNumberOfInputs(self)

    def GetNumberOfOutputs(self):
        r"""GetNumberOfOutputs(self) -> unsigned long"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUC3MUC3_Superclass_GetNumberOfOutputs(self)

    def GetOutputNames(self):
        r"""GetOutputNames(self) -> vectorstring"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUC3MUC3_Superclass_GetOutputNames(self)

    def GetOutputs(self):
        r"""GetOutputs(self) -> vectoritkDataObject"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUC3MUC3_Superclass_GetOutputs(self)

    def HasOutput(self, key):
        r"""
        HasOutput(self, key) -> bool

        Parameters
        ----------
        key: std::string const &

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUC3MUC3_Superclass_HasOutput(self, key)

    def GetIndexedInputs(self):
        r"""GetIndexedInputs(self) -> vectoritkDataObject"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUC3MUC3_Superclass_GetIndexedInputs(self)

    def GetNumberOfIndexedInputs(self):
        r"""GetNumberOfIndexedInputs(self) -> unsigned long"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUC3MUC3_Superclass_GetNumberOfIndexedInputs(self)

    def GetNumberOfValidRequiredInputs(self):
        r"""GetNumberOfValidRequiredInputs(self) -> unsigned long"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUC3MUC3_Superclass_GetNumberOfValidRequiredInputs(self)

    def GetIndexedOutputs(self):
        r"""GetIndexedOutputs(self) -> vectoritkDataObject"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUC3MUC3_Superclass_GetIndexedOutputs(self)

    def GetNumberOfIndexedOutputs(self):
        r"""GetNumberOfIndexedOutputs(self) -> unsigned long"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUC3MUC3_Superclass_GetNumberOfIndexedOutputs(self)

    def MakeOutput(self, *args):
        r"""
        MakeOutput(self, arg0) -> itkDataObject_Pointer

        Parameters
        ----------
        arg0: std::string const &

        MakeOutput(self, idx) -> itkDataObject_Pointer

        Parameters
        ----------
        idx: unsigned long

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUC3MUC3_Superclass_MakeOutput(self, *args)

    def SetAbortGenerateData(self, _arg):
        r"""
        SetAbortGenerateData(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUC3MUC3_Superclass_SetAbortGenerateData(self, _arg)

    def GetAbortGenerateData(self):
        r"""GetAbortGenerateData(self) -> bool const &"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUC3MUC3_Superclass_GetAbortGenerateData(self)

    def AbortGenerateDataOn(self):
        r"""AbortGenerateDataOn(self)"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUC3MUC3_Superclass_AbortGenerateDataOn(self)

    def AbortGenerateDataOff(self):
        r"""AbortGenerateDataOff(self)"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUC3MUC3_Superclass_AbortGenerateDataOff(self)

    def GetProgress(self):
        r"""GetProgress(self) -> float"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUC3MUC3_Superclass_GetProgress(self)

    def UpdateProgress(self, progress):
        r"""
        UpdateProgress(self, progress)

        Parameters
        ----------
        progress: float

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUC3MUC3_Superclass_UpdateProgress(self, progress)

    def IncrementProgress(self, increment):
        r"""
        IncrementProgress(self, increment)

        Parameters
        ----------
        increment: float

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUC3MUC3_Superclass_IncrementProgress(self, increment)

    def Update(self):
        r"""Update(self)"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUC3MUC3_Superclass_Update(self)

    def UpdateLargestPossibleRegion(self):
        r"""UpdateLargestPossibleRegion(self)"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUC3MUC3_Superclass_UpdateLargestPossibleRegion(self)

    def UpdateOutputInformation(self):
        r"""UpdateOutputInformation(self)"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUC3MUC3_Superclass_UpdateOutputInformation(self)

    def PropagateRequestedRegion(self, output):
        r"""
        PropagateRequestedRegion(self, output)

        Parameters
        ----------
        output: itkDataObject *

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUC3MUC3_Superclass_PropagateRequestedRegion(self, output)

    def UpdateOutputData(self, output):
        r"""
        UpdateOutputData(self, output)

        Parameters
        ----------
        output: itkDataObject *

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUC3MUC3_Superclass_UpdateOutputData(self, output)

    def EnlargeOutputRequestedRegion(self, arg0):
        r"""
        EnlargeOutputRequestedRegion(self, arg0)

        Parameters
        ----------
        arg0: itkDataObject *

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUC3MUC3_Superclass_EnlargeOutputRequestedRegion(self, arg0)

    def ResetPipeline(self):
        r"""ResetPipeline(self)"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUC3MUC3_Superclass_ResetPipeline(self)

    def SetReleaseDataFlag(self, val):
        r"""
        SetReleaseDataFlag(self, val)

        Parameters
        ----------
        val: bool

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUC3MUC3_Superclass_SetReleaseDataFlag(self, val)

    def GetReleaseDataFlag(self):
        r"""GetReleaseDataFlag(self) -> bool"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUC3MUC3_Superclass_GetReleaseDataFlag(self)

    def ReleaseDataFlagOn(self):
        r"""ReleaseDataFlagOn(self)"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUC3MUC3_Superclass_ReleaseDataFlagOn(self)

    def ReleaseDataFlagOff(self):
        r"""ReleaseDataFlagOff(self)"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUC3MUC3_Superclass_ReleaseDataFlagOff(self)

    def SetReleaseDataBeforeUpdateFlag(self, _arg):
        r"""
        SetReleaseDataBeforeUpdateFlag(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUC3MUC3_Superclass_SetReleaseDataBeforeUpdateFlag(self, _arg)

    def GetReleaseDataBeforeUpdateFlag(self):
        r"""GetReleaseDataBeforeUpdateFlag(self) -> bool const &"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUC3MUC3_Superclass_GetReleaseDataBeforeUpdateFlag(self)

    def ReleaseDataBeforeUpdateFlagOn(self):
        r"""ReleaseDataBeforeUpdateFlagOn(self)"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUC3MUC3_Superclass_ReleaseDataBeforeUpdateFlagOn(self)

    def ReleaseDataBeforeUpdateFlagOff(self):
        r"""ReleaseDataBeforeUpdateFlagOff(self)"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUC3MUC3_Superclass_ReleaseDataBeforeUpdateFlagOff(self)

    def SetNumberOfWorkUnits(self, _arg):
        r"""
        SetNumberOfWorkUnits(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUC3MUC3_Superclass_SetNumberOfWorkUnits(self, _arg)

    def GetNumberOfWorkUnits(self):
        r"""GetNumberOfWorkUnits(self) -> unsigned int const &"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUC3MUC3_Superclass_GetNumberOfWorkUnits(self)

    def GetMultiThreader(self):
        r"""GetMultiThreader(self) -> itkMultiThreaderBase"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUC3MUC3_Superclass_GetMultiThreader(self)

    def SetMultiThreader(self, threader):
        r"""
        SetMultiThreader(self, threader)

        Parameters
        ----------
        threader: itkMultiThreaderBase *

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUC3MUC3_Superclass_SetMultiThreader(self, threader)

    def PrepareOutputs(self):
        r"""PrepareOutputs(self)"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUC3MUC3_Superclass_PrepareOutputs(self)
    __swig_destroy__ = _itkMeshProcrustesAlignFilterPython.delete_itkMeshProcrustesAlignFilterMUC3MUC3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeshProcrustesAlignFilterMUC3MUC3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUC3MUC3_Superclass_cast(obj)

# Register itkMeshProcrustesAlignFilterMUC3MUC3_Superclass in _itkMeshProcrustesAlignFilterPython:
_itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUC3MUC3_Superclass_swigregister(itkMeshProcrustesAlignFilterMUC3MUC3_Superclass)

def itkMeshProcrustesAlignFilterMUS3MUS3_New():
    return itkMeshProcrustesAlignFilterMUS3MUS3.New()

class itkMeshProcrustesAlignFilterMUS3MUS3(itkMeshProcrustesAlignFilterMSS3MSS3_Superclass):
    r"""Proxy of C++ itkMeshProcrustesAlignFilterMUS3MUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeshProcrustesAlignFilterMUS3MUS3_Pointer"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUS3MUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeshProcrustesAlignFilterMUS3MUS3_Pointer"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUS3MUS3_Clone(self)

    def SetNumberOfInputs(self, num):
        r"""
        SetNumberOfInputs(self, num)

        Parameters
        ----------
        num: unsigned int

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUS3MUS3_SetNumberOfInputs(self, num)

    def SetInput(self, idx, mesh):
        r"""
        SetInput(self, idx, mesh)

        Parameters
        ----------
        idx: unsigned int
        mesh: itkMeshUS3 *

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUS3MUS3_SetInput(self, idx, mesh)

    def GetInput(self, idx):
        r"""
        GetInput(self, idx) -> itkMeshUS3

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUS3MUS3_GetInput(self, idx)

    def GetOutput(self, idx):
        r"""
        GetOutput(self, idx) -> itkMeshUS3

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUS3MUS3_GetOutput(self, idx)

    def GetMean(self):
        r"""GetMean(self) -> itkMeshUS3"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUS3MUS3_GetMean(self)

    def GetTransform(self, idx):
        r"""
        GetTransform(self, idx) -> itkAffineTransformD3

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUS3MUS3_GetTransform(self, idx)

    def GetRotationDegrees(self, transform):
        r"""
        GetRotationDegrees(self, transform) -> itkVectorD3

        Parameters
        ----------
        transform: itkAffineTransformD3 *

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUS3MUS3_GetRotationDegrees(self, transform)

    def PrintTransform(self, transform):
        r"""
        PrintTransform(self, transform)

        Parameters
        ----------
        transform: itkAffineTransformD3 *

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUS3MUS3_PrintTransform(self, transform)

    def GetConvergence(self):
        r"""GetConvergence(self) -> double"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUS3MUS3_GetConvergence(self)

    def SetConvergence(self, _arg):
        r"""
        SetConvergence(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUS3MUS3_SetConvergence(self, _arg)

    def SetUseScalingOn(self):
        r"""SetUseScalingOn(self)"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUS3MUS3_SetUseScalingOn(self)

    def SetUseScalingOff(self):
        r"""SetUseScalingOff(self)"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUS3MUS3_SetUseScalingOff(self)

    def SetUseScaling(self, _arg):
        r"""
        SetUseScaling(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUS3MUS3_SetUseScaling(self, _arg)

    def GetUseScaling(self):
        r"""GetUseScaling(self) -> bool"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUS3MUS3_GetUseScaling(self)

    def SetUseInitialAverageOn(self):
        r"""SetUseInitialAverageOn(self)"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUS3MUS3_SetUseInitialAverageOn(self)

    def SetUseInitialAverageOff(self):
        r"""SetUseInitialAverageOff(self)"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUS3MUS3_SetUseInitialAverageOff(self)

    def SetUseInitialAverage(self, _arg):
        r"""
        SetUseInitialAverage(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUS3MUS3_SetUseInitialAverage(self, _arg)

    def GetUseInitialAverage(self):
        r"""GetUseInitialAverage(self) -> bool"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUS3MUS3_GetUseInitialAverage(self)

    def SetUseNormalizationOn(self):
        r"""SetUseNormalizationOn(self)"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUS3MUS3_SetUseNormalizationOn(self)

    def SetUseNormalizationOff(self):
        r"""SetUseNormalizationOff(self)"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUS3MUS3_SetUseNormalizationOff(self)

    def SetUseNormalization(self, _arg):
        r"""
        SetUseNormalization(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUS3MUS3_SetUseNormalization(self, _arg)

    def GetUseNormalization(self):
        r"""GetUseNormalization(self) -> bool"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUS3MUS3_GetUseNormalization(self)

    def SetUseSingleIterationOn(self):
        r"""SetUseSingleIterationOn(self)"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUS3MUS3_SetUseSingleIterationOn(self)

    def SetUseSingleIterationOff(self):
        r"""SetUseSingleIterationOff(self)"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUS3MUS3_SetUseSingleIterationOff(self)

    def SetUseSingleIteration(self, _arg):
        r"""
        SetUseSingleIteration(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUS3MUS3_SetUseSingleIteration(self, _arg)

    def GetUseSingleIteration(self):
        r"""GetUseSingleIteration(self) -> bool"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUS3MUS3_GetUseSingleIteration(self)

    def SetAlignRotationOn(self):
        r"""SetAlignRotationOn(self)"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUS3MUS3_SetAlignRotationOn(self)

    def SetAlignRotationOff(self):
        r"""SetAlignRotationOff(self)"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUS3MUS3_SetAlignRotationOff(self)

    def SetAlignRotation(self, _arg):
        r"""
        SetAlignRotation(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUS3MUS3_SetAlignRotation(self, _arg)

    def GetAlignRotation(self):
        r"""GetAlignRotation(self) -> bool"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUS3MUS3_GetAlignRotation(self)

    def GetMeanPointsDifference(self):
        r"""GetMeanPointsDifference(self) -> double"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUS3MUS3_GetMeanPointsDifference(self)
    __swig_destroy__ = _itkMeshProcrustesAlignFilterPython.delete_itkMeshProcrustesAlignFilterMUS3MUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeshProcrustesAlignFilterMUS3MUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUS3MUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeshProcrustesAlignFilterMUS3MUS3

        Create a new object of the class itkMeshProcrustesAlignFilterMUS3MUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshProcrustesAlignFilterMUS3MUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshProcrustesAlignFilterMUS3MUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshProcrustesAlignFilterMUS3MUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshProcrustesAlignFilterMUS3MUS3 in _itkMeshProcrustesAlignFilterPython:
_itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUS3MUS3_swigregister(itkMeshProcrustesAlignFilterMUS3MUS3)
class itkMeshProcrustesAlignFilterMUS3MUS3_Superclass(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkMeshProcrustesAlignFilterMUS3MUS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def GetInputNames(self):
        r"""GetInputNames(self) -> vectorstring"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUS3MUS3_Superclass_GetInputNames(self)

    def GetRequiredInputNames(self):
        r"""GetRequiredInputNames(self) -> vectorstring"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUS3MUS3_Superclass_GetRequiredInputNames(self)

    def GetInputs(self):
        r"""GetInputs(self) -> vectoritkDataObject"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUS3MUS3_Superclass_GetInputs(self)

    def HasInput(self, key):
        r"""
        HasInput(self, key) -> bool

        Parameters
        ----------
        key: std::string const &

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUS3MUS3_Superclass_HasInput(self, key)

    def GetNumberOfInputs(self):
        r"""GetNumberOfInputs(self) -> unsigned long"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUS3MUS3_Superclass_GetNumberOfInputs(self)

    def GetNumberOfOutputs(self):
        r"""GetNumberOfOutputs(self) -> unsigned long"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUS3MUS3_Superclass_GetNumberOfOutputs(self)

    def GetOutputNames(self):
        r"""GetOutputNames(self) -> vectorstring"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUS3MUS3_Superclass_GetOutputNames(self)

    def GetOutputs(self):
        r"""GetOutputs(self) -> vectoritkDataObject"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUS3MUS3_Superclass_GetOutputs(self)

    def HasOutput(self, key):
        r"""
        HasOutput(self, key) -> bool

        Parameters
        ----------
        key: std::string const &

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUS3MUS3_Superclass_HasOutput(self, key)

    def GetIndexedInputs(self):
        r"""GetIndexedInputs(self) -> vectoritkDataObject"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUS3MUS3_Superclass_GetIndexedInputs(self)

    def GetNumberOfIndexedInputs(self):
        r"""GetNumberOfIndexedInputs(self) -> unsigned long"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUS3MUS3_Superclass_GetNumberOfIndexedInputs(self)

    def GetNumberOfValidRequiredInputs(self):
        r"""GetNumberOfValidRequiredInputs(self) -> unsigned long"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUS3MUS3_Superclass_GetNumberOfValidRequiredInputs(self)

    def GetIndexedOutputs(self):
        r"""GetIndexedOutputs(self) -> vectoritkDataObject"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUS3MUS3_Superclass_GetIndexedOutputs(self)

    def GetNumberOfIndexedOutputs(self):
        r"""GetNumberOfIndexedOutputs(self) -> unsigned long"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUS3MUS3_Superclass_GetNumberOfIndexedOutputs(self)

    def MakeOutput(self, *args):
        r"""
        MakeOutput(self, arg0) -> itkDataObject_Pointer

        Parameters
        ----------
        arg0: std::string const &

        MakeOutput(self, idx) -> itkDataObject_Pointer

        Parameters
        ----------
        idx: unsigned long

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUS3MUS3_Superclass_MakeOutput(self, *args)

    def SetAbortGenerateData(self, _arg):
        r"""
        SetAbortGenerateData(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUS3MUS3_Superclass_SetAbortGenerateData(self, _arg)

    def GetAbortGenerateData(self):
        r"""GetAbortGenerateData(self) -> bool const &"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUS3MUS3_Superclass_GetAbortGenerateData(self)

    def AbortGenerateDataOn(self):
        r"""AbortGenerateDataOn(self)"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUS3MUS3_Superclass_AbortGenerateDataOn(self)

    def AbortGenerateDataOff(self):
        r"""AbortGenerateDataOff(self)"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUS3MUS3_Superclass_AbortGenerateDataOff(self)

    def GetProgress(self):
        r"""GetProgress(self) -> float"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUS3MUS3_Superclass_GetProgress(self)

    def UpdateProgress(self, progress):
        r"""
        UpdateProgress(self, progress)

        Parameters
        ----------
        progress: float

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUS3MUS3_Superclass_UpdateProgress(self, progress)

    def IncrementProgress(self, increment):
        r"""
        IncrementProgress(self, increment)

        Parameters
        ----------
        increment: float

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUS3MUS3_Superclass_IncrementProgress(self, increment)

    def Update(self):
        r"""Update(self)"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUS3MUS3_Superclass_Update(self)

    def UpdateLargestPossibleRegion(self):
        r"""UpdateLargestPossibleRegion(self)"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUS3MUS3_Superclass_UpdateLargestPossibleRegion(self)

    def UpdateOutputInformation(self):
        r"""UpdateOutputInformation(self)"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUS3MUS3_Superclass_UpdateOutputInformation(self)

    def PropagateRequestedRegion(self, output):
        r"""
        PropagateRequestedRegion(self, output)

        Parameters
        ----------
        output: itkDataObject *

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUS3MUS3_Superclass_PropagateRequestedRegion(self, output)

    def UpdateOutputData(self, output):
        r"""
        UpdateOutputData(self, output)

        Parameters
        ----------
        output: itkDataObject *

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUS3MUS3_Superclass_UpdateOutputData(self, output)

    def EnlargeOutputRequestedRegion(self, arg0):
        r"""
        EnlargeOutputRequestedRegion(self, arg0)

        Parameters
        ----------
        arg0: itkDataObject *

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUS3MUS3_Superclass_EnlargeOutputRequestedRegion(self, arg0)

    def ResetPipeline(self):
        r"""ResetPipeline(self)"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUS3MUS3_Superclass_ResetPipeline(self)

    def SetReleaseDataFlag(self, val):
        r"""
        SetReleaseDataFlag(self, val)

        Parameters
        ----------
        val: bool

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUS3MUS3_Superclass_SetReleaseDataFlag(self, val)

    def GetReleaseDataFlag(self):
        r"""GetReleaseDataFlag(self) -> bool"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUS3MUS3_Superclass_GetReleaseDataFlag(self)

    def ReleaseDataFlagOn(self):
        r"""ReleaseDataFlagOn(self)"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUS3MUS3_Superclass_ReleaseDataFlagOn(self)

    def ReleaseDataFlagOff(self):
        r"""ReleaseDataFlagOff(self)"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUS3MUS3_Superclass_ReleaseDataFlagOff(self)

    def SetReleaseDataBeforeUpdateFlag(self, _arg):
        r"""
        SetReleaseDataBeforeUpdateFlag(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUS3MUS3_Superclass_SetReleaseDataBeforeUpdateFlag(self, _arg)

    def GetReleaseDataBeforeUpdateFlag(self):
        r"""GetReleaseDataBeforeUpdateFlag(self) -> bool const &"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUS3MUS3_Superclass_GetReleaseDataBeforeUpdateFlag(self)

    def ReleaseDataBeforeUpdateFlagOn(self):
        r"""ReleaseDataBeforeUpdateFlagOn(self)"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUS3MUS3_Superclass_ReleaseDataBeforeUpdateFlagOn(self)

    def ReleaseDataBeforeUpdateFlagOff(self):
        r"""ReleaseDataBeforeUpdateFlagOff(self)"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUS3MUS3_Superclass_ReleaseDataBeforeUpdateFlagOff(self)

    def SetNumberOfWorkUnits(self, _arg):
        r"""
        SetNumberOfWorkUnits(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUS3MUS3_Superclass_SetNumberOfWorkUnits(self, _arg)

    def GetNumberOfWorkUnits(self):
        r"""GetNumberOfWorkUnits(self) -> unsigned int const &"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUS3MUS3_Superclass_GetNumberOfWorkUnits(self)

    def GetMultiThreader(self):
        r"""GetMultiThreader(self) -> itkMultiThreaderBase"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUS3MUS3_Superclass_GetMultiThreader(self)

    def SetMultiThreader(self, threader):
        r"""
        SetMultiThreader(self, threader)

        Parameters
        ----------
        threader: itkMultiThreaderBase *

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUS3MUS3_Superclass_SetMultiThreader(self, threader)

    def PrepareOutputs(self):
        r"""PrepareOutputs(self)"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUS3MUS3_Superclass_PrepareOutputs(self)
    __swig_destroy__ = _itkMeshProcrustesAlignFilterPython.delete_itkMeshProcrustesAlignFilterMUS3MUS3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeshProcrustesAlignFilterMUS3MUS3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUS3MUS3_Superclass_cast(obj)

# Register itkMeshProcrustesAlignFilterMUS3MUS3_Superclass in _itkMeshProcrustesAlignFilterPython:
_itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMUS3MUS3_Superclass_swigregister(itkMeshProcrustesAlignFilterMUS3MUS3_Superclass)

def itkMeshProcrustesAlignFilterMD3MD3_New():
    return itkMeshProcrustesAlignFilterMD3MD3.New()

class itkMeshProcrustesAlignFilterMD3MD3(itkMeshProcrustesAlignFilterMSS3MSS3_Superclass):
    r"""Proxy of C++ itkMeshProcrustesAlignFilterMD3MD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeshProcrustesAlignFilterMD3MD3_Pointer"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMD3MD3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeshProcrustesAlignFilterMD3MD3_Pointer"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMD3MD3_Clone(self)

    def SetNumberOfInputs(self, num):
        r"""
        SetNumberOfInputs(self, num)

        Parameters
        ----------
        num: unsigned int

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMD3MD3_SetNumberOfInputs(self, num)

    def SetInput(self, idx, mesh):
        r"""
        SetInput(self, idx, mesh)

        Parameters
        ----------
        idx: unsigned int
        mesh: itkMeshD3 *

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMD3MD3_SetInput(self, idx, mesh)

    def GetInput(self, idx):
        r"""
        GetInput(self, idx) -> itkMeshD3

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMD3MD3_GetInput(self, idx)

    def GetOutput(self, idx):
        r"""
        GetOutput(self, idx) -> itkMeshD3

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMD3MD3_GetOutput(self, idx)

    def GetMean(self):
        r"""GetMean(self) -> itkMeshD3"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMD3MD3_GetMean(self)

    def GetTransform(self, idx):
        r"""
        GetTransform(self, idx) -> itkAffineTransformD3

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMD3MD3_GetTransform(self, idx)

    def GetRotationDegrees(self, transform):
        r"""
        GetRotationDegrees(self, transform) -> itkVectorD3

        Parameters
        ----------
        transform: itkAffineTransformD3 *

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMD3MD3_GetRotationDegrees(self, transform)

    def PrintTransform(self, transform):
        r"""
        PrintTransform(self, transform)

        Parameters
        ----------
        transform: itkAffineTransformD3 *

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMD3MD3_PrintTransform(self, transform)

    def GetConvergence(self):
        r"""GetConvergence(self) -> double"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMD3MD3_GetConvergence(self)

    def SetConvergence(self, _arg):
        r"""
        SetConvergence(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMD3MD3_SetConvergence(self, _arg)

    def SetUseScalingOn(self):
        r"""SetUseScalingOn(self)"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMD3MD3_SetUseScalingOn(self)

    def SetUseScalingOff(self):
        r"""SetUseScalingOff(self)"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMD3MD3_SetUseScalingOff(self)

    def SetUseScaling(self, _arg):
        r"""
        SetUseScaling(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMD3MD3_SetUseScaling(self, _arg)

    def GetUseScaling(self):
        r"""GetUseScaling(self) -> bool"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMD3MD3_GetUseScaling(self)

    def SetUseInitialAverageOn(self):
        r"""SetUseInitialAverageOn(self)"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMD3MD3_SetUseInitialAverageOn(self)

    def SetUseInitialAverageOff(self):
        r"""SetUseInitialAverageOff(self)"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMD3MD3_SetUseInitialAverageOff(self)

    def SetUseInitialAverage(self, _arg):
        r"""
        SetUseInitialAverage(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMD3MD3_SetUseInitialAverage(self, _arg)

    def GetUseInitialAverage(self):
        r"""GetUseInitialAverage(self) -> bool"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMD3MD3_GetUseInitialAverage(self)

    def SetUseNormalizationOn(self):
        r"""SetUseNormalizationOn(self)"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMD3MD3_SetUseNormalizationOn(self)

    def SetUseNormalizationOff(self):
        r"""SetUseNormalizationOff(self)"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMD3MD3_SetUseNormalizationOff(self)

    def SetUseNormalization(self, _arg):
        r"""
        SetUseNormalization(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMD3MD3_SetUseNormalization(self, _arg)

    def GetUseNormalization(self):
        r"""GetUseNormalization(self) -> bool"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMD3MD3_GetUseNormalization(self)

    def SetUseSingleIterationOn(self):
        r"""SetUseSingleIterationOn(self)"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMD3MD3_SetUseSingleIterationOn(self)

    def SetUseSingleIterationOff(self):
        r"""SetUseSingleIterationOff(self)"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMD3MD3_SetUseSingleIterationOff(self)

    def SetUseSingleIteration(self, _arg):
        r"""
        SetUseSingleIteration(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMD3MD3_SetUseSingleIteration(self, _arg)

    def GetUseSingleIteration(self):
        r"""GetUseSingleIteration(self) -> bool"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMD3MD3_GetUseSingleIteration(self)

    def SetAlignRotationOn(self):
        r"""SetAlignRotationOn(self)"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMD3MD3_SetAlignRotationOn(self)

    def SetAlignRotationOff(self):
        r"""SetAlignRotationOff(self)"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMD3MD3_SetAlignRotationOff(self)

    def SetAlignRotation(self, _arg):
        r"""
        SetAlignRotation(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMD3MD3_SetAlignRotation(self, _arg)

    def GetAlignRotation(self):
        r"""GetAlignRotation(self) -> bool"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMD3MD3_GetAlignRotation(self)

    def GetMeanPointsDifference(self):
        r"""GetMeanPointsDifference(self) -> double"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMD3MD3_GetMeanPointsDifference(self)
    __swig_destroy__ = _itkMeshProcrustesAlignFilterPython.delete_itkMeshProcrustesAlignFilterMD3MD3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeshProcrustesAlignFilterMD3MD3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMD3MD3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeshProcrustesAlignFilterMD3MD3

        Create a new object of the class itkMeshProcrustesAlignFilterMD3MD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshProcrustesAlignFilterMD3MD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshProcrustesAlignFilterMD3MD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshProcrustesAlignFilterMD3MD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshProcrustesAlignFilterMD3MD3 in _itkMeshProcrustesAlignFilterPython:
_itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMD3MD3_swigregister(itkMeshProcrustesAlignFilterMD3MD3)

def itkMeshProcrustesAlignFilterMF3MF3_New():
    return itkMeshProcrustesAlignFilterMF3MF3.New()

class itkMeshProcrustesAlignFilterMF3MF3(itkMeshProcrustesAlignFilterMSS3MSS3_Superclass):
    r"""Proxy of C++ itkMeshProcrustesAlignFilterMF3MF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeshProcrustesAlignFilterMF3MF3_Pointer"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMF3MF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeshProcrustesAlignFilterMF3MF3_Pointer"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMF3MF3_Clone(self)

    def SetNumberOfInputs(self, num):
        r"""
        SetNumberOfInputs(self, num)

        Parameters
        ----------
        num: unsigned int

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMF3MF3_SetNumberOfInputs(self, num)

    def SetInput(self, idx, mesh):
        r"""
        SetInput(self, idx, mesh)

        Parameters
        ----------
        idx: unsigned int
        mesh: itkMeshF3 *

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMF3MF3_SetInput(self, idx, mesh)

    def GetInput(self, idx):
        r"""
        GetInput(self, idx) -> itkMeshF3

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMF3MF3_GetInput(self, idx)

    def GetOutput(self, idx):
        r"""
        GetOutput(self, idx) -> itkMeshF3

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMF3MF3_GetOutput(self, idx)

    def GetMean(self):
        r"""GetMean(self) -> itkMeshF3"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMF3MF3_GetMean(self)

    def GetTransform(self, idx):
        r"""
        GetTransform(self, idx) -> itkAffineTransformD3

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMF3MF3_GetTransform(self, idx)

    def GetRotationDegrees(self, transform):
        r"""
        GetRotationDegrees(self, transform) -> itkVectorD3

        Parameters
        ----------
        transform: itkAffineTransformD3 *

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMF3MF3_GetRotationDegrees(self, transform)

    def PrintTransform(self, transform):
        r"""
        PrintTransform(self, transform)

        Parameters
        ----------
        transform: itkAffineTransformD3 *

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMF3MF3_PrintTransform(self, transform)

    def GetConvergence(self):
        r"""GetConvergence(self) -> double"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMF3MF3_GetConvergence(self)

    def SetConvergence(self, _arg):
        r"""
        SetConvergence(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMF3MF3_SetConvergence(self, _arg)

    def SetUseScalingOn(self):
        r"""SetUseScalingOn(self)"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMF3MF3_SetUseScalingOn(self)

    def SetUseScalingOff(self):
        r"""SetUseScalingOff(self)"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMF3MF3_SetUseScalingOff(self)

    def SetUseScaling(self, _arg):
        r"""
        SetUseScaling(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMF3MF3_SetUseScaling(self, _arg)

    def GetUseScaling(self):
        r"""GetUseScaling(self) -> bool"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMF3MF3_GetUseScaling(self)

    def SetUseInitialAverageOn(self):
        r"""SetUseInitialAverageOn(self)"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMF3MF3_SetUseInitialAverageOn(self)

    def SetUseInitialAverageOff(self):
        r"""SetUseInitialAverageOff(self)"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMF3MF3_SetUseInitialAverageOff(self)

    def SetUseInitialAverage(self, _arg):
        r"""
        SetUseInitialAverage(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMF3MF3_SetUseInitialAverage(self, _arg)

    def GetUseInitialAverage(self):
        r"""GetUseInitialAverage(self) -> bool"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMF3MF3_GetUseInitialAverage(self)

    def SetUseNormalizationOn(self):
        r"""SetUseNormalizationOn(self)"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMF3MF3_SetUseNormalizationOn(self)

    def SetUseNormalizationOff(self):
        r"""SetUseNormalizationOff(self)"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMF3MF3_SetUseNormalizationOff(self)

    def SetUseNormalization(self, _arg):
        r"""
        SetUseNormalization(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMF3MF3_SetUseNormalization(self, _arg)

    def GetUseNormalization(self):
        r"""GetUseNormalization(self) -> bool"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMF3MF3_GetUseNormalization(self)

    def SetUseSingleIterationOn(self):
        r"""SetUseSingleIterationOn(self)"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMF3MF3_SetUseSingleIterationOn(self)

    def SetUseSingleIterationOff(self):
        r"""SetUseSingleIterationOff(self)"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMF3MF3_SetUseSingleIterationOff(self)

    def SetUseSingleIteration(self, _arg):
        r"""
        SetUseSingleIteration(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMF3MF3_SetUseSingleIteration(self, _arg)

    def GetUseSingleIteration(self):
        r"""GetUseSingleIteration(self) -> bool"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMF3MF3_GetUseSingleIteration(self)

    def SetAlignRotationOn(self):
        r"""SetAlignRotationOn(self)"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMF3MF3_SetAlignRotationOn(self)

    def SetAlignRotationOff(self):
        r"""SetAlignRotationOff(self)"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMF3MF3_SetAlignRotationOff(self)

    def SetAlignRotation(self, _arg):
        r"""
        SetAlignRotation(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMF3MF3_SetAlignRotation(self, _arg)

    def GetAlignRotation(self):
        r"""GetAlignRotation(self) -> bool"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMF3MF3_GetAlignRotation(self)

    def GetMeanPointsDifference(self):
        r"""GetMeanPointsDifference(self) -> double"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMF3MF3_GetMeanPointsDifference(self)
    __swig_destroy__ = _itkMeshProcrustesAlignFilterPython.delete_itkMeshProcrustesAlignFilterMF3MF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeshProcrustesAlignFilterMF3MF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMF3MF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeshProcrustesAlignFilterMF3MF3

        Create a new object of the class itkMeshProcrustesAlignFilterMF3MF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshProcrustesAlignFilterMF3MF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshProcrustesAlignFilterMF3MF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshProcrustesAlignFilterMF3MF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshProcrustesAlignFilterMF3MF3 in _itkMeshProcrustesAlignFilterPython:
_itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMF3MF3_swigregister(itkMeshProcrustesAlignFilterMF3MF3)

def itkMeshProcrustesAlignFilterMSS3MSS3_New():
    return itkMeshProcrustesAlignFilterMSS3MSS3.New()

class itkMeshProcrustesAlignFilterMSS3MSS3(itkMeshProcrustesAlignFilterMSS3MSS3_Superclass):
    r"""Proxy of C++ itkMeshProcrustesAlignFilterMSS3MSS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeshProcrustesAlignFilterMSS3MSS3_Pointer"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMSS3MSS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeshProcrustesAlignFilterMSS3MSS3_Pointer"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMSS3MSS3_Clone(self)

    def SetNumberOfInputs(self, num):
        r"""
        SetNumberOfInputs(self, num)

        Parameters
        ----------
        num: unsigned int

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMSS3MSS3_SetNumberOfInputs(self, num)

    def SetInput(self, idx, mesh):
        r"""
        SetInput(self, idx, mesh)

        Parameters
        ----------
        idx: unsigned int
        mesh: itkMeshSS3 *

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMSS3MSS3_SetInput(self, idx, mesh)

    def GetInput(self, idx):
        r"""
        GetInput(self, idx) -> itkMeshSS3

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMSS3MSS3_GetInput(self, idx)

    def GetOutput(self, idx):
        r"""
        GetOutput(self, idx) -> itkMeshSS3

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMSS3MSS3_GetOutput(self, idx)

    def GetMean(self):
        r"""GetMean(self) -> itkMeshSS3"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMSS3MSS3_GetMean(self)

    def GetTransform(self, idx):
        r"""
        GetTransform(self, idx) -> itkAffineTransformD3

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMSS3MSS3_GetTransform(self, idx)

    def GetRotationDegrees(self, transform):
        r"""
        GetRotationDegrees(self, transform) -> itkVectorD3

        Parameters
        ----------
        transform: itkAffineTransformD3 *

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMSS3MSS3_GetRotationDegrees(self, transform)

    def PrintTransform(self, transform):
        r"""
        PrintTransform(self, transform)

        Parameters
        ----------
        transform: itkAffineTransformD3 *

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMSS3MSS3_PrintTransform(self, transform)

    def GetConvergence(self):
        r"""GetConvergence(self) -> double"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMSS3MSS3_GetConvergence(self)

    def SetConvergence(self, _arg):
        r"""
        SetConvergence(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMSS3MSS3_SetConvergence(self, _arg)

    def SetUseScalingOn(self):
        r"""SetUseScalingOn(self)"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMSS3MSS3_SetUseScalingOn(self)

    def SetUseScalingOff(self):
        r"""SetUseScalingOff(self)"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMSS3MSS3_SetUseScalingOff(self)

    def SetUseScaling(self, _arg):
        r"""
        SetUseScaling(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMSS3MSS3_SetUseScaling(self, _arg)

    def GetUseScaling(self):
        r"""GetUseScaling(self) -> bool"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMSS3MSS3_GetUseScaling(self)

    def SetUseInitialAverageOn(self):
        r"""SetUseInitialAverageOn(self)"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMSS3MSS3_SetUseInitialAverageOn(self)

    def SetUseInitialAverageOff(self):
        r"""SetUseInitialAverageOff(self)"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMSS3MSS3_SetUseInitialAverageOff(self)

    def SetUseInitialAverage(self, _arg):
        r"""
        SetUseInitialAverage(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMSS3MSS3_SetUseInitialAverage(self, _arg)

    def GetUseInitialAverage(self):
        r"""GetUseInitialAverage(self) -> bool"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMSS3MSS3_GetUseInitialAverage(self)

    def SetUseNormalizationOn(self):
        r"""SetUseNormalizationOn(self)"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMSS3MSS3_SetUseNormalizationOn(self)

    def SetUseNormalizationOff(self):
        r"""SetUseNormalizationOff(self)"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMSS3MSS3_SetUseNormalizationOff(self)

    def SetUseNormalization(self, _arg):
        r"""
        SetUseNormalization(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMSS3MSS3_SetUseNormalization(self, _arg)

    def GetUseNormalization(self):
        r"""GetUseNormalization(self) -> bool"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMSS3MSS3_GetUseNormalization(self)

    def SetUseSingleIterationOn(self):
        r"""SetUseSingleIterationOn(self)"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMSS3MSS3_SetUseSingleIterationOn(self)

    def SetUseSingleIterationOff(self):
        r"""SetUseSingleIterationOff(self)"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMSS3MSS3_SetUseSingleIterationOff(self)

    def SetUseSingleIteration(self, _arg):
        r"""
        SetUseSingleIteration(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMSS3MSS3_SetUseSingleIteration(self, _arg)

    def GetUseSingleIteration(self):
        r"""GetUseSingleIteration(self) -> bool"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMSS3MSS3_GetUseSingleIteration(self)

    def SetAlignRotationOn(self):
        r"""SetAlignRotationOn(self)"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMSS3MSS3_SetAlignRotationOn(self)

    def SetAlignRotationOff(self):
        r"""SetAlignRotationOff(self)"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMSS3MSS3_SetAlignRotationOff(self)

    def SetAlignRotation(self, _arg):
        r"""
        SetAlignRotation(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMSS3MSS3_SetAlignRotation(self, _arg)

    def GetAlignRotation(self):
        r"""GetAlignRotation(self) -> bool"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMSS3MSS3_GetAlignRotation(self)

    def GetMeanPointsDifference(self):
        r"""GetMeanPointsDifference(self) -> double"""
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMSS3MSS3_GetMeanPointsDifference(self)
    __swig_destroy__ = _itkMeshProcrustesAlignFilterPython.delete_itkMeshProcrustesAlignFilterMSS3MSS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeshProcrustesAlignFilterMSS3MSS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMSS3MSS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeshProcrustesAlignFilterMSS3MSS3

        Create a new object of the class itkMeshProcrustesAlignFilterMSS3MSS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshProcrustesAlignFilterMSS3MSS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshProcrustesAlignFilterMSS3MSS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshProcrustesAlignFilterMSS3MSS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshProcrustesAlignFilterMSS3MSS3 in _itkMeshProcrustesAlignFilterPython:
_itkMeshProcrustesAlignFilterPython.itkMeshProcrustesAlignFilterMSS3MSS3_swigregister(itkMeshProcrustesAlignFilterMSS3MSS3)

from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def mesh_procrustes_align_filter(*args,  number_of_inputs: int=..., convergence: float=..., use_scaling: bool=..., use_initial_average: bool=..., use_normalization: bool=..., use_single_iteration: bool=..., align_rotation: bool=...,**kwargs):
    """Functional interface for MeshProcrustesAlignFilter"""
    import itk

    kwarg_typehints = { 'number_of_inputs':number_of_inputs,'convergence':convergence,'use_scaling':use_scaling,'use_initial_average':use_initial_average,'use_normalization':use_normalization,'use_single_iteration':use_single_iteration,'align_rotation':align_rotation }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.MeshProcrustesAlignFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def mesh_procrustes_align_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.Shape.MeshProcrustesAlignFilter
    mesh_procrustes_align_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    mesh_procrustes_align_filter.__doc__ = filter_object.__doc__



