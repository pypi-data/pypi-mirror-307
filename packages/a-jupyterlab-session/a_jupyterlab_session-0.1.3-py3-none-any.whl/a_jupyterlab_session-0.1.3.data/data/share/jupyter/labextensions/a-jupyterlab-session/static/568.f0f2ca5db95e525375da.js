"use strict";(self.webpackChunka_jupyterlab_session=self.webpackChunka_jupyterlab_session||[]).push([[568],{568:(e,t,a)=>{a.r(t),a.d(t,{default:()=>r});var n=a(980),s=a(196),i=a(571);const r={id:"a-jupyterlab-session:plugin",autoStart:!0,requires:[s.IDefaultFileBrowser],activate:async(e,t)=>{const a=".sessions",s="requirements.txt";console.log("JupyterLab extension a-jupyterlab-session is activated!"),await e.serviceManager.contents.get(a,{content:!1}).catch((async()=>{await e.serviceManager.contents.newUntitled({type:"directory",path:n.PathExt.dirname(a)}).then((async t=>{await e.serviceManager.contents.rename(t.path,a)}))}));const r=(new Date).toLocaleDateString("en-us",{year:"numeric",month:"2-digit",day:"2-digit",hour:"2-digit",minute:"2-digit",second:"2-digit",hourCycle:"h24"}).replace(/\//g,".").replace(", ","-"),c=(0,i.v4)().slice(0,8),o=n.PathExt.join(a,`${r}-${c}`);await e.serviceManager.contents.newUntitled({type:"directory",path:n.PathExt.dirname(o)}).then((async t=>{await e.serviceManager.contents.rename(t.path,o)})),await e.commands.execute("filebrowser:open-path",{path:o}),await e.serviceManager.contents.copy(s,o).catch((e=>console.warn(`Failed to copy the ${s} file to the new session: ${e}`)))}}}}]);