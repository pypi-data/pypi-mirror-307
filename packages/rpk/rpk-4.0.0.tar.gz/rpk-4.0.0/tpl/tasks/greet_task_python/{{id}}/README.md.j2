{{ name }}
====================

Welcome to your (fairly bare bone!) task template.

What are the next steps?

## Implement your task

By default, the template does not do anything useful. It does provide however all
the boilerplate to quickly implement a ROS 2 task.

Implement your task in `./{{ id }}/task_impl.py`

## Install on the robot

To install your task on the robot, you should use PAL's `deploy` tool. It will
compile your task (using ROS' `colcon`) and copy the resulting artifacts to the
`deployed workspace` of your robot (`/home/pal/deployed_ws`).


### Deploy the application controller to the robot

**To deploy the code to the robot, you have to run the following commands from
*inside* your PAL OS Developer Docker image**.

- from within the PAL OS Developer Docker image, go to root of the project
- run `ros2 run pal_deploy deploy --package {{ id }} {{ robot | lower
  }}-XXc` (replace `{{ robot | lower }}-XXc` by your actual robot)

You can now `ssh` onto the robot (`ssh pal@{{ robot | lower }}-XXc`, password
`pal`), and go to your project: `cd ~/deployed_ws/share/{{ id }}`

## Run your application

`ssh` onto the robot (`ssh pal@{{ robot | lower }}-XXc`, password `pal`).

There are several ways to run the application:

1. Automatically launch the app and transition to an active state:

`ros2 launch {{ id }} {{ id }}.launch.py`

2. Manually start your skill:

`ros2 run {{ id }} start_task`

Since your task is implemented as a lifecycle node, you need to manage it
through the lifecycle tools. You can execute the following to transit the
mission controller as follows:

``ros2 lifecycle set /task_{{ id }} configure``
``ros2 lifecycle set /task_{{ id }} activate``

To stop it (but not re-setting it's internal variables):
``ros2 lifecycle set /task_{{ id }} activate``

To stop it and clean it:
``ros2 lifecycle set /task_{{ id }} deactivate``
``ros2 lifecycle set /task_{{ id }} cleanup``


3. Automatically start your application at startup:

See [Application
management](https://docs.pal-robotics.com/sdk-dev/management/application-management). 

