# Generated by ariadne-codegen
# Source: aesop/graphql/queries

from typing import Annotated, List, Literal, Optional, Union

from pydantic import Field

from .base_model import BaseModel


class GetDomainAssets(BaseModel):
    node: Optional[
        Annotated[
            Union["GetDomainAssetsNodeNode", "GetDomainAssetsNodeNamespace"],
            Field(discriminator="typename__"),
        ]
    ]


class GetDomainAssetsNodeNode(BaseModel):
    typename__: Literal[
        "API",
        "Crawler",
        "CrawlerRun",
        "Dashboard",
        "Dataset",
        "Group",
        "Hierarchy",
        "KnowledgeCard",
        "Metric",
        "Node",
        "Person",
        "Pipeline",
        "SystemTagCounts",
        "UserDefinedResource",
        "VirtualView",
    ] = Field(alias="__typename")


class GetDomainAssetsNodeNamespace(BaseModel):
    typename__: Literal["Namespace"] = Field(alias="__typename")
    namespace_assets: Optional["GetDomainAssetsNodeNamespaceNamespaceAssets"] = Field(
        alias="namespaceAssets"
    )


class GetDomainAssetsNodeNamespaceNamespaceAssets(BaseModel):
    assets: "GetDomainAssetsNodeNamespaceNamespaceAssetsAssets"


class GetDomainAssetsNodeNamespaceNamespaceAssetsAssets(BaseModel):
    edges: List[Optional["GetDomainAssetsNodeNamespaceNamespaceAssetsAssetsEdges"]]
    page_info: "GetDomainAssetsNodeNamespaceNamespaceAssetsAssetsPageInfo" = Field(
        alias="pageInfo"
    )


class GetDomainAssetsNodeNamespaceNamespaceAssetsAssetsEdges(BaseModel):
    node: "GetDomainAssetsNodeNamespaceNamespaceAssetsAssetsEdgesNode"


class GetDomainAssetsNodeNamespaceNamespaceAssetsAssetsEdgesNode(BaseModel):
    typename__: Literal[
        "API",
        "Dashboard",
        "Dataset",
        "Entity",
        "Group",
        "Hierarchy",
        "KnowledgeCard",
        "Metric",
        "Namespace",
        "Person",
        "Pipeline",
        "UserDefinedResource",
        "VirtualView",
    ] = Field(alias="__typename")
    id: str


class GetDomainAssetsNodeNamespaceNamespaceAssetsAssetsPageInfo(BaseModel):
    has_next_page: Optional[bool] = Field(alias="hasNextPage")
    end_cursor: Optional[str] = Field(alias="endCursor")


GetDomainAssets.model_rebuild()
GetDomainAssetsNodeNamespace.model_rebuild()
GetDomainAssetsNodeNamespaceNamespaceAssets.model_rebuild()
GetDomainAssetsNodeNamespaceNamespaceAssetsAssets.model_rebuild()
GetDomainAssetsNodeNamespaceNamespaceAssetsAssetsEdges.model_rebuild()
