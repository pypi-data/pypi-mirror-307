# Generated by ariadne-codegen
# Source: aesop/graphql/queries

from typing import Annotated, Literal, Optional, Union

from pydantic import Field

from .base_model import BaseModel
from .fragments import NamespaceParts


class GetDomain(BaseModel):
    node: Optional[
        Annotated[
            Union["GetDomainNodeNode", "GetDomainNodeNamespace"],
            Field(discriminator="typename__"),
        ]
    ]


class GetDomainNodeNode(BaseModel):
    typename__: Literal[
        "API",
        "Crawler",
        "CrawlerRun",
        "Dashboard",
        "Dataset",
        "Group",
        "Hierarchy",
        "KnowledgeCard",
        "Metric",
        "Node",
        "Person",
        "Pipeline",
        "SystemTagCounts",
        "UserDefinedResource",
        "VirtualView",
    ] = Field(alias="__typename")


class GetDomainNodeNamespace(NamespaceParts):
    typename__: Literal["Namespace"] = Field(alias="__typename")


GetDomain.model_rebuild()
