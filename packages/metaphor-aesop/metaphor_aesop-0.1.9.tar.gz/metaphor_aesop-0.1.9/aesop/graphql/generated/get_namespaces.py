# Generated by ariadne-codegen
# Source: aesop/graphql/queries

from typing import List, Optional

from pydantic import Field

from .base_model import BaseModel
from .fragments import NamespaceParts


class GetNamespaces(BaseModel):
    namespaces: "GetNamespacesNamespaces"


class GetNamespacesNamespaces(BaseModel):
    edges: List[Optional["GetNamespacesNamespacesEdges"]]
    page_info: "GetNamespacesNamespacesPageInfo" = Field(alias="pageInfo")


class GetNamespacesNamespacesEdges(BaseModel):
    node: "GetNamespacesNamespacesEdgesNode"


class GetNamespacesNamespacesEdgesNode(NamespaceParts):
    id: str


class GetNamespacesNamespacesPageInfo(BaseModel):
    has_next_page: Optional[bool] = Field(alias="hasNextPage")
    end_cursor: Optional[str] = Field(alias="endCursor")


GetNamespaces.model_rebuild()
GetNamespacesNamespaces.model_rebuild()
GetNamespacesNamespacesEdges.model_rebuild()
