"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .streamedchatcompletionchoice import (
    StreamedChatCompletionChoice,
    StreamedChatCompletionChoiceTypedDict,
)
from .usage import Usage, UsageTypedDict
from friendli.types import BaseModel
from typing import List, Optional
from typing_extensions import NotRequired, TypedDict


class DataTypedDict(TypedDict):
    choices: List[StreamedChatCompletionChoiceTypedDict]
    created: int
    r"""The Unix timestamp (in seconds) for when the token sampled."""
    usage: NotRequired[UsageTypedDict]


class Data(BaseModel):
    choices: List[StreamedChatCompletionChoice]

    created: int
    r"""The Unix timestamp (in seconds) for when the token sampled."""

    usage: Optional[Usage] = None


class StreamedChatCompletionResponseTypedDict(TypedDict):
    r"""A server-sent event containing chat completion content."""

    data: DataTypedDict


class StreamedChatCompletionResponse(BaseModel):
    r"""A server-sent event containing chat completion content."""

    data: Data
