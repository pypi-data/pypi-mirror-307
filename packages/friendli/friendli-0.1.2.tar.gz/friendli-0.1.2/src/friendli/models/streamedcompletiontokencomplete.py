"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .completionchoice import CompletionChoice, CompletionChoiceTypedDict
from .usage import Usage, UsageTypedDict
from enum import Enum
from friendli.types import BaseModel
from typing import List
from typing_extensions import TypedDict


class StreamedCompletionTokenCompleteEvent(str, Enum):
    r"""Type of server-sent event."""

    COMPLETE = "complete"


class StreamedCompletionTokenCompleteTypedDict(TypedDict):
    event: StreamedCompletionTokenCompleteEvent
    r"""Type of server-sent event."""
    choices: List[CompletionChoiceTypedDict]
    usage: UsageTypedDict


class StreamedCompletionTokenComplete(BaseModel):
    event: StreamedCompletionTokenCompleteEvent
    r"""Type of server-sent event."""

    choices: List[CompletionChoice]

    usage: Usage
