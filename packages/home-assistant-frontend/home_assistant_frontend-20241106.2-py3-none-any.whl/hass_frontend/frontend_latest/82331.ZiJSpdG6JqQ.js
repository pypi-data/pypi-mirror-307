export const id=82331;export const ids=[82331];export const modules={47814:(e,t,i)=>{i.d(t,{H:()=>a});i(16891);const a=async e=>{if(!e.parentNode)throw new Error("Cannot setup Leaflet map on disconnected element");const t=(await Promise.all([i.e(61060),i.e(44750)]).then(i.t.bind(i,44066,23))).default;t.Icon.Default.imagePath="/static/images/leaflet/images/";const a=t.map(e),s=document.createElement("link");s.setAttribute("href","/static/images/leaflet/leaflet.css"),s.setAttribute("rel","stylesheet"),e.parentNode.appendChild(s),a.setView([52.3731339,4.8903147],13);return[a,t,o(t).addTo(a)]},o=e=>e.tileLayer("https://basemaps.cartocdn.com/rastertiles/voyager/{z}/{x}/{y}"+(e.Browser.retina?"@2x.png":".png"),{attribution:'&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a>, &copy; <a href="https://carto.com/attributions">CARTO</a>',subdomains:"abcd",minZoom:0,maxZoom:20})},63861:(e,t,i)=>{var a=i(36312),o=i(15112),s=i(77706),r=i(63073),n=i(34897);let l=(0,a.A)(null,(function(e,t){return{F:class extends t{constructor(...t){super(...t),e(this)}},d:[{kind:"field",decorators:[(0,s.MZ)({attribute:"entity-id"})],key:"entityId",value:void 0},{kind:"field",decorators:[(0,s.MZ)({attribute:"entity-name"})],key:"entityName",value:void 0},{kind:"field",decorators:[(0,s.MZ)({attribute:"entity-picture"})],key:"entityPicture",value:void 0},{kind:"field",decorators:[(0,s.MZ)({attribute:"entity-color"})],key:"entityColor",value:void 0},{kind:"method",key:"render",value:function(){return o.qy` <div class="marker ${this.entityPicture?"picture":""}" style="${(0,r.W)({"border-color":this.entityColor})}" @click="${this._badgeTap}"> ${this.entityPicture?o.qy`<div class="entity-picture" style="${(0,r.W)({"background-image":`url(${this.entityPicture})`})}"></div>`:this.entityName} </div> `}},{kind:"method",key:"_badgeTap",value:function(e){e.stopPropagation(),this.entityId&&(0,n.r)(this,"hass-more-info",{entityId:this.entityId})}},{kind:"get",static:!0,key:"styles",value:function(){return o.AH`.marker{display:flex;justify-content:center;text-align:center;align-items:center;box-sizing:border-box;width:48px;height:48px;font-size:var(--ha-marker-font-size, 1.5em);border-radius:var(--ha-marker-border-radius,50%);border:1px solid var(--ha-marker-color,var(--primary-color));color:var(--primary-text-color);background-color:var(--card-background-color)}.marker.picture{overflow:hidden}.entity-picture{background-size:cover;height:100%;width:100%}`}}]}}),o.WF);customElements.define("ha-entity-marker",l)},4712:(e,t,i)=>{i.a(e,(async(e,t)=>{try{var a=i(36312),o=i(68689),s=(i(89655),i(253),i(54846),i(16891),i(28514)),r=i(15112),n=i(77706),l=i(8581),d=i(41924),c=i(47814),h=i(65459),u=i(19244),p=i(44164),m=(i(28066),i(63861),e([l,d]));[l,d]=m.then?(await m)():m;const f=e=>"string"==typeof e?e:e.entity_id;(0,a.A)([(0,n.EM)("ha-map")],(function(e,t){class i extends t{constructor(...t){super(...t),e(this)}}return{F:i,d:[{kind:"field",decorators:[(0,n.MZ)({attribute:!1})],key:"hass",value:void 0},{kind:"field",decorators:[(0,n.MZ)({attribute:!1})],key:"entities",value:void 0},{kind:"field",decorators:[(0,n.MZ)({attribute:!1})],key:"paths",value:void 0},{kind:"field",decorators:[(0,n.MZ)({attribute:!1})],key:"layers",value:void 0},{kind:"field",decorators:[(0,n.MZ)({type:Boolean})],key:"autoFit",value:()=>!1},{kind:"field",decorators:[(0,n.MZ)({type:Boolean})],key:"renderPassive",value:()=>!1},{kind:"field",decorators:[(0,n.MZ)({type:Boolean})],key:"interactiveZones",value:()=>!1},{kind:"field",decorators:[(0,n.MZ)({type:Boolean})],key:"fitZones",value:()=>!1},{kind:"field",decorators:[(0,n.MZ)({attribute:"theme-mode",type:String})],key:"themeMode",value:()=>"auto"},{kind:"field",decorators:[(0,n.MZ)({type:Number})],key:"zoom",value:()=>14},{kind:"field",decorators:[(0,n.wk)()],key:"_loaded",value:()=>!1},{kind:"field",key:"leafletMap",value:void 0},{kind:"field",key:"Leaflet",value:void 0},{kind:"field",key:"_resizeObserver",value:void 0},{kind:"field",key:"_mapItems",value:()=>[]},{kind:"field",key:"_mapFocusItems",value:()=>[]},{kind:"field",key:"_mapZones",value:()=>[]},{kind:"field",key:"_mapFocusZones",value:()=>[]},{kind:"field",key:"_mapPaths",value:()=>[]},{kind:"method",key:"connectedCallback",value:function(){(0,o.A)(i,"connectedCallback",this,3)([]),this._loadMap(),this._attachObserver()}},{kind:"method",key:"disconnectedCallback",value:function(){(0,o.A)(i,"disconnectedCallback",this,3)([]),this.leafletMap&&(this.leafletMap.remove(),this.leafletMap=void 0,this.Leaflet=void 0),this._loaded=!1,this._resizeObserver&&this._resizeObserver.unobserve(this)}},{kind:"method",key:"update",value:function(e){if((0,o.A)(i,"update",this,3)([e]),!this._loaded)return;let t=!1;const a=e.get("hass");if(e.has("_loaded")||e.has("entities"))this._drawEntities(),t=!0;else if(this._loaded&&a&&this.entities)for(const e of this.entities)if(a.states[f(e)]!==this.hass.states[f(e)]){this._drawEntities(),t=!0;break}(e.has("_loaded")||e.has("paths"))&&this._drawPaths(),(e.has("_loaded")||e.has("layers"))&&(this._drawLayers(e.get("layers")),t=!0),(e.has("_loaded")||this.autoFit&&t)&&this.fitMap(),e.has("zoom")&&this.leafletMap.setZoom(this.zoom),(e.has("themeMode")||e.has("hass")&&(!a||a.themes?.darkMode!==this.hass.themes?.darkMode))&&this._updateMapStyle()}},{kind:"get",key:"_darkMode",value:function(){return"dark"===this.themeMode||"auto"===this.themeMode&&Boolean(this.hass.themes.darkMode)}},{kind:"method",key:"_updateMapStyle",value:function(){const e=this.renderRoot.querySelector("#map");e.classList.toggle("dark",this._darkMode),e.classList.toggle("forced-dark","dark"===this.themeMode),e.classList.toggle("forced-light","light"===this.themeMode)}},{kind:"field",key:"_loading",value:()=>!1},{kind:"method",key:"_loadMap",value:async function(){if(this._loading)return;let e=this.shadowRoot.getElementById("map");e||(e=document.createElement("div"),e.id="map",this.shadowRoot.append(e)),this._loading=!0;try{[this.leafletMap,this.Leaflet]=await(0,c.H)(e),this._updateMapStyle(),this._loaded=!0}finally{this._loading=!1}}},{kind:"method",key:"fitMap",value:function(e){if(!this.leafletMap||!this.Leaflet||!this.hass)return;if(!this._mapFocusItems.length&&!this._mapFocusZones.length&&!this.layers?.length)return void this.leafletMap.setView(new this.Leaflet.LatLng(this.hass.config.latitude,this.hass.config.longitude),e?.zoom||this.zoom);let t=this.Leaflet.latLngBounds(this._mapFocusItems?this._mapFocusItems.map((e=>e.getLatLng())):[]);this._mapFocusZones?.forEach((e=>{t.extend("getBounds"in e?e.getBounds():e.getLatLng())})),this.layers?.forEach((e=>{t.extend("getBounds"in e?e.getBounds():e.getLatLng())})),t=t.pad(e?.pad??.5),this.leafletMap.fitBounds(t,{maxZoom:e?.zoom||this.zoom})}},{kind:"method",key:"fitBounds",value:function(e,t){if(!this.leafletMap||!this.Leaflet||!this.hass)return;const i=this.Leaflet.latLngBounds(e).pad(t?.pad??.5);this.leafletMap.fitBounds(i,{maxZoom:t?.zoom||this.zoom})}},{kind:"method",key:"_drawLayers",value:function(e){if(e&&e.forEach((e=>e.remove())),!this.layers)return;const t=this.leafletMap;this.layers.forEach((e=>{t.addLayer(e)}))}},{kind:"method",key:"_computePathTooltip",value:function(e,t){let i;return i=e.fullDatetime?(0,l.r6)(t.timestamp,this.hass.locale,this.hass.config):(0,s.c)(t.timestamp)?(0,d.ie)(t.timestamp,this.hass.locale,this.hass.config):(0,d.Xs)(t.timestamp,this.hass.locale,this.hass.config),`${e.name}<br>${i}`}},{kind:"method",key:"_drawPaths",value:function(){const e=this.hass,t=this.leafletMap,i=this.Leaflet;if(!e||!t||!i)return;if(this._mapPaths.length&&(this._mapPaths.forEach((e=>e.remove())),this._mapPaths=[]),!this.paths)return;const a=getComputedStyle(this).getPropertyValue("--dark-primary-color");this.paths.forEach((e=>{let o,s;e.gradualOpacity&&(o=e.gradualOpacity/(e.points.length-2),s=1-e.gradualOpacity);for(let t=0;t<e.points.length-1;t++){const r=e.gradualOpacity?s+t*o:void 0;this._mapPaths.push(i.circleMarker(e.points[t].point,{radius:p.C?8:3,color:e.color||a,opacity:r,fillOpacity:r,interactive:!0}).bindTooltip(this._computePathTooltip(e,e.points[t]),{direction:"top"})),this._mapPaths.push(i.polyline([e.points[t].point,e.points[t+1].point],{color:e.color||a,opacity:r,interactive:!1}))}const r=e.points.length-1;if(r>=0){const t=e.gradualOpacity?s+r*o:void 0;this._mapPaths.push(i.circleMarker(e.points[r].point,{radius:p.C?8:3,color:e.color||a,opacity:t,fillOpacity:t,interactive:!0}).bindTooltip(this._computePathTooltip(e,e.points[r]),{direction:"top"}))}this._mapPaths.forEach((e=>t.addLayer(e)))}))}},{kind:"method",key:"_drawEntities",value:function(){const e=this.hass,t=this.leafletMap,i=this.Leaflet;if(!e||!t||!i)return;if(this._mapItems.length&&(this._mapItems.forEach((e=>e.remove())),this._mapItems=[],this._mapFocusItems=[]),this._mapZones.length&&(this._mapZones.forEach((e=>e.remove())),this._mapZones=[],this._mapFocusZones=[]),!this.entities)return;const a=getComputedStyle(this),o=a.getPropertyValue("--accent-color"),s=a.getPropertyValue("--secondary-text-color"),r=a.getPropertyValue("--dark-primary-color"),n=this._darkMode?"dark":"light";for(const t of this.entities){const a=e.states[f(t)];if(!a)continue;const l="string"!=typeof t?t.name:void 0,d=l??(0,u.u)(a),{latitude:c,longitude:p,passive:m,icon:y,radius:k,entity_picture:g,gps_accuracy:v}=a.attributes;if(!c||!p)continue;if("zone"===(0,h.t)(a)){if(m&&!this.renderPassive)continue;let e="";if(y){const t=document.createElement("ha-icon");t.setAttribute("icon",y),e=t.outerHTML}else{const t=document.createElement("span");t.innerHTML=d,e=t.outerHTML}this._mapZones.push(i.marker([c,p],{icon:i.divIcon({html:e,iconSize:[24,24],className:n}),interactive:this.interactiveZones,title:d}));const a=i.circle([c,p],{interactive:!1,color:m?s:o,radius:k});this._mapZones.push(a),!this.fitZones||"string"!=typeof t&&!1===t.focus||this._mapFocusZones.push(a);continue}const _="string"!=typeof t&&"state"===t.label_mode?this.hass.formatEntityState(a):l??d.split(" ").map((e=>e[0])).join("").substr(0,3),b=i.marker([c,p],{icon:i.divIcon({html:`\n              <ha-entity-marker\n                entity-id="${f(t)}"\n                entity-name="${_}"\n                entity-picture="${g?this.hass.hassUrl(g):""}"\n                ${"string"!=typeof t?`entity-color="${t.color}"`:""}\n              ></ha-entity-marker>\n            `,iconSize:[48,48],className:""}),title:d});this._mapItems.push(b),"string"!=typeof t&&!1===t.focus||this._mapFocusItems.push(b),v&&this._mapItems.push(i.circle([c,p],{interactive:!1,color:r,radius:v}))}this._mapItems.forEach((e=>t.addLayer(e))),this._mapZones.forEach((e=>t.addLayer(e)))}},{kind:"method",key:"_attachObserver",value:async function(){this._resizeObserver||(this._resizeObserver=new ResizeObserver((()=>{this.leafletMap?.invalidateSize({debounceMoveend:!0})}))),this._resizeObserver.observe(this)}},{kind:"get",static:!0,key:"styles",value:function(){return r.AH`:host{display:block;height:300px}#map{height:100%}#map.dark{background:#090909}#map.forced-dark{color:#fff;--map-filter:invert(0.9) hue-rotate(170deg) brightness(1.5) contrast(1.2) saturate(0.3)}#map.forced-light{background:#fff;color:#000;--map-filter:invert(0)}#map:active{cursor:grabbing;cursor:-moz-grabbing;cursor:-webkit-grabbing}.leaflet-tile-pane{filter:var(--map-filter)}.dark .leaflet-bar a{background-color:#1c1c1c;color:#fff}.dark .leaflet-bar a:hover{background-color:#313131}.leaflet-marker-draggable{cursor:move!important}.leaflet-edit-resize{border-radius:50%;cursor:nesw-resize!important}.named-icon{display:flex;align-items:center;justify-content:center;flex-direction:column;text-align:center;color:var(--primary-text-color)}.leaflet-pane{z-index:0!important}.leaflet-bottom,.leaflet-control,.leaflet-top{z-index:1!important}.leaflet-tooltip{padding:8px;font-size:90%;background:rgba(80,80,80,.9)!important;color:#fff!important;border-radius:4px;box-shadow:none!important;text-align:center}`}}]}}),r.mN);t()}catch(e){t(e)}}))}};
//# sourceMappingURL=82331.ZiJSpdG6JqQ.js.map