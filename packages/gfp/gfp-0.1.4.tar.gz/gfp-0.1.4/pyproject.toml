[build-system]
requires = ["setuptools>=68", "setuptools_scm[toml]>=8"]
build-backend = "setuptools.build_meta"

[project]
name = "gfp"
authors = [{ name = "gforien" }]
description = "Python CLI for gforien."
readme = "README.rst"
urls.Homepage = "https://github.com/gforien/gfp"
requires-python = ">=3.10"
dynamic = ["version"]
scripts = { gfp = "gfp.__main__:main" }
dependencies = ["typer==0.12.5"]

[project.optional-dependencies]
dev = ["gfp[tox]", "gfp[lint]", "gfp[test]", "gfp[doc]", "gfp[build]"]
lint = [
  "gfp[lint-template]",
  # Add additional linting dependencies here
]
test = [
  "gfp[test-template]",
  # Add additional testing dependencies here
]
doc = [
  "gfp[doc-template]",
  # Add additional documentation dependencies below this line
]
build = [
  "gfp[build-template]",
  # Add additional build dependencies below this line
]

###########################################################
# The following dependencies are managed via the template.#
# Do not modify them manually to prevent conflicts during #
# template updates.                                       #
###########################################################

tox = ["tox==4.11.1"]
lint-template = [
  "mypy==1.5.1",
  "pytest==7.4.1",
  "types-docutils",
  "types-setuptools",
  "jinja2==3.1.2",
  "ruff==0.1.6",
]
test-template = [
  "pytest==7.4.1",
  "pytest-randomly==3.15.0",
  "pytest-cov==4.1.0",
  "coverage[toml]==7.3.1",
]
doc-template = [
  "sphinx==7.2.6",
  "sphinx_rtd_theme==1.3.0",
  "sphinx-autodoc-typehints==1.24.0",
  "pip-licenses==4.3.2",
  "jinja2==3.1.2",
]
build-template = ["build[virtualenv]==1.0.3"]

########################################
# End of template-managed dependencies #
########################################

[tool.setuptools.package-data]
"*" = ["py.typed"]

# Enables the usage of setuptools_scm
[tool.setuptools_scm]


[tool.pyright]
exclude = ["build/**"]

[tool.ruff]
line-length = 120
src = ["src"]
extend-exclude = ["conf.py"]
target-version = "py38"
select = ["ALL"]
ignore = [
  "COM812", # Conflicts with the formatter
  "ISC001", # Conflicts with the formatter
  "ANN101", # "missing-type-self"
  "PT001",  # https://github.com/astral-sh/ruff/issues/8796#issuecomment-1825907715
  "PT004",  # https://github.com/astral-sh/ruff/issues/8796#issuecomment-1825907715
  "PT005",  # https://github.com/astral-sh/ruff/issues/8796#issuecomment-1825907715
  "PT023",  # https://github.com/astral-sh/ruff/issues/8796#issuecomment-1825907715
]

[tool.ruff.per-file-ignores]
"tests/**" = [
  "S101", # Use of `assert` detected
  "D103", # Missing docstring in public function
]
"**/__init__.py" = [
  "F401", # Imported but unused
  "F403", # Wildcard imports
]
"docs/**" = [
  "INP001", # Requires __init__.py but docs folder is not a package.
]

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`(https://github.com/astral-sh/ruff/issues/5434)
keep-runtime-typing = true

[tool.ruff.pydocstyle]
convention = "google"

[tool.mypy]
# Functions need to be annotated
disallow_untyped_defs = true
warn_unused_ignores = true
exclude = [
  "gfp-\\d+", # Ignore temporary folder created by setuptools when building an sdist
  "venv.*/",
  "log/",
  "build/",
  "dist/",
]

[tool.pytest.ini_options]
addopts = """
    -vv
    --doctest-modules
    --import-mode=append
    --ignore-glob=gfp-[0-9]*
    --ignore="docs/_scripts"
    --cov=gfp
    --cov-config=pyproject.toml
    --cov-report=
    """

[tool.coverage.run]
branch = true

[tool.coverage.paths]
# Maps coverage measured in site-packages to source files in src
source = ["src/", ".tox/*/lib/python*/site-packages/"]

[tool.coverage.report]
exclude_also = ["\\.\\.\\.", "if TYPE_CHECKING:"]
partial_branches = ["pragma: no branch", "if not TYPE_CHECKING:"]

[tool.coverage.html]
directory = "reports/coverage_html"

[tool.coverage.xml]
output = "reports/coverage.xml"

[[tool.mypy.overrides]]
module = [
  # Ignore packages that do not provide type hints here
  # For example, add "dash.*" to ignore all imports from Dash
]
ignore_missing_imports = true
