tasks:
  # The Python modules below define language model downstream evaluation
  # task data. If one of the below tasks is specified, N-grams will
  # be constructed from the documents that make up the task data
  # using the script prepare_task_data.
  # find_matching_ngrams will then search for these N-grams
  # in the training documents, and remove_matching_ngrams will
  # split the documents based on matches
  - name: nemo_curator.tasks.Winogrande
    params: {}
  - name: nemo_curator.tasks.Squad
    params: {}
  - name: nemo_curator.tasks.TriviaQA
    params: {}
  - name: nemo_curator.tasks.Quac
    params: {}
  - name: nemo_curator.tasks.WebQA
    params: {}
  - name: nemo_curator.tasks.Race
    params: {}
  - name: nemo_curator.tasks.Drop
    params: {}
  - name: nemo_curator.tasks.WiC
    params: {}
  - name: nemo_curator.tasks.PIQA
    params: {}
  - name: nemo_curator.tasks.ArcEasy
    params: {}
  - name: nemo_curator.tasks.ArcChallenge
    params: {}
  - name: nemo_curator.tasks.OpenBookQA
    params: {}
  - name: nemo_curator.tasks.BoolQ
    params: {}
  - name: nemo_curator.tasks.Copa
    params: {}
  - name: nemo_curator.tasks.RTE
    params: {}
  - name: nemo_curator.tasks.MultiRC
    params: {}
  - name: nemo_curator.tasks.WSC
    params: {}
  - name: nemo_curator.tasks.CB
    params: {}
  - name: nemo_curator.tasks.ANLI
    params: {}
  - name: nemo_curator.tasks.Record
    params: {}
